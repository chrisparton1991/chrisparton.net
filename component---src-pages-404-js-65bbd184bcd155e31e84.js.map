{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_common__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","className","style","textAlign","to","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","DefaultLayout","bodyClass","isHome","site","allGhostSettings","edges","node","twitterUrl","twitter","replace","facebookUrl","facebook","react_default","Helmet_default","lang","type","codeinjection_styles","Object","assign","cover_image","backgroundImage","gatsby_browser_entry","logo","src","alt","title","gatsby_image_default","fixed","file","childImageSharp","href","target","rel","config","description","common_Navigation","navigation","navClass","DefaultLayoutSettingsQuery","Layout_DefaultLayout","_2417764204","PostCard","post","url","slug","readingTime","readingTimeHelper","feature_image","tags","lib","visibility","autolink","featured","excerpt","primary_author","profile_image","name","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","map","navItem","i","match","key","label","defaultProps","Layout","common_PostCard","common_Pagination","m","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-404-js-65bbd184bcd155e31e84.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Layout } from '../components/common'\r\n\r\nconst NotFoundPage = () => (\r\n    <Layout>\r\n        <div className=\"container\">\r\n            <article className=\"content\" style={{ textAlign: `center` }}>\r\n                <h1 className=\"content-title\">Error 404</h1>\r\n                <section className=\"content-body\">\r\n                    Page not found, <Link to=\"/\">return home</Link> to start over\r\n                </section>\r\n            </article>\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","module.exports = {\r\n    siteUrl: `https://gatsby.ghost.org`, // Site domain. Do not include a trailing slash!\r\n\r\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\r\n\r\n    siteTitleMeta: `Ghost Gatsby Starter`, // This allows an alternative site title for meta data for pages.\r\n    siteDescriptionMeta: `A starter template to build amazing static websites with Ghost and Gatsby`, // This allows an alternative site description for meta data for pages.\r\n\r\n    shareImageWidth: 1000, // Change to the width of your default share image\r\n    shareImageHeight: 523, // Change to the height of your default share image\r\n\r\n    shortTitle: `Ghost`, // Used for App manifest e.g. Mobile Home Screen\r\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\r\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\r\n    themeColor: `#15171A`, // Used for Offline Manifest\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { Link, StaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\nimport { Navigation } from '.'\r\nimport config from '../../utils/siteConfig'\r\n\r\n// Styles\r\nimport '../../styles/app.css'\r\n\r\n/**\r\n* Main layout component\r\n*\r\n* The Layout component wraps around each page and template.\r\n* It also provides the header, footer as well as the main\r\n* styles, and meta data for each page.\r\n*\r\n*/\r\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\r\n    const site = data.allGhostSettings.edges[0].node\r\n    const twitterUrl = site.twitter ? `https://twitter.com/${site.twitter.replace(/^@/, ``)}` : null\r\n    const facebookUrl = site.facebook ? `https://www.facebook.com/${site.facebook.replace(/^\\//, ``)}` : null\r\n\r\n    return (\r\n    <>\r\n        <Helmet>\r\n            <html lang={site.lang} />\r\n            <style type=\"text/css\">{`${site.codeinjection_styles}`}</style>\r\n            <body className={bodyClass} />\r\n        </Helmet>\r\n\r\n        <div className=\"viewport\">\r\n\r\n            <div className=\"viewport-top\">\r\n                {/* The main header section on top of the screen */}\r\n                <header className=\"site-head\" style={{ ...site.cover_image && { backgroundImage: `url(${site.cover_image})` } }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"site-mast\">\r\n                            <div className=\"site-mast-left\">\r\n                                <Link to=\"/\">\r\n                                    {site.logo ?\r\n                                        <img className=\"site-logo\" src={site.logo} alt={site.title} />\r\n                                        : <Img fixed={data.file.childImageSharp.fixed} alt={site.title} />\r\n                                    }\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"site-mast-right\">\r\n                                { site.twitter && <a href={ twitterUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" /></a>}\r\n                                { site.facebook && <a href={ facebookUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" /></a>}\r\n                                <a className=\"site-nav-item\" href={ `https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/` } target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" /></a>\r\n                            </div>\r\n                        </div>\r\n                        { isHome ?\r\n                            <div className=\"site-banner\">\r\n                                <h1 className=\"site-banner-title\">{site.title}</h1>\r\n                                <p className=\"site-banner-desc\">{site.description}</p>\r\n                            </div> :\r\n                            null}\r\n                        <nav className=\"site-nav\">\r\n                            <div className=\"site-nav-left\">\r\n                                {/* The navigation items as setup in Ghost */}\r\n                                <Navigation data={site.navigation} navClass=\"site-nav-item\" />\r\n                            </div>\r\n                            <div className=\"site-nav-right\">\r\n                                <Link className=\"site-nav-button\" to=\"/about\">About</Link>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </header>\r\n\r\n                <main className=\"site-main\">\r\n                    {/* All the main content gets inserted here, index.js, post.js */}\r\n                    {children}\r\n                </main>\r\n\r\n            </div>\r\n\r\n            <div className=\"viewport-bottom\">\r\n                {/* The footer at the very bottom of the screen */}\r\n                <footer className=\"site-foot\">\r\n                    <div className=\"site-foot-nav container\">\r\n                        <div className=\"site-foot-nav-left\">\r\n                            <Link to=\"/\">{site.title}</Link> © 2019 &mdash; Published with <a className=\"site-foot-nav-item\" href=\"https://ghost.org\" target=\"_blank\" rel=\"noopener noreferrer\">Ghost</a>\r\n                        </div>\r\n                        <div className=\"site-foot-nav-right\">\r\n                            <Navigation data={site.navigation} navClass=\"site-foot-nav-item\" />\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nDefaultLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    bodyClass: PropTypes.string,\r\n    isHome: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n        allGhostSettings: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n}\r\n\r\nconst DefaultLayoutSettingsQuery = props => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query GhostSettings {\r\n                allGhostSettings {\r\n                    edges {\r\n                        node {\r\n                            ...GhostSettingsFields\r\n                        }\r\n                    }\r\n                }\r\n                file(relativePath: {eq: \"ghost-icon.png\"}) {\r\n                    childImageSharp {\r\n                        fixed(width: 30, height: 30) {\r\n                            ...GatsbyImageSharpFixed\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <DefaultLayout data={data} {...props} />}\r\n    />\r\n)\r\n\r\nexport default DefaultLayoutSettingsQuery\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Tags } from '@tryghost/helpers-gatsby'\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\n\nconst PostCard = ({ post }) => {\n    const url = `/blog/${post.slug}/`\n    const readingTime = readingTimeHelper(post)\n\n    return (\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.feature_image})` ,\n                    }}></div>}\n                {post.tags && <div className=\"post-card-tags\"> <Tags post={post} visibility=\"public\" autolink={false} /></div>}\n                {post.featured && <span>Featured</span>}\n                <h2 className=\"post-card-title\">{post.title}</h2>\n            </header>\n            <section className=\"post-card-excerpt\">{post.excerpt}</section>\n            <footer className=\"post-card-footer\">\n                <div className=\"post-card-footer-left\">\n                    <div className=\"post-card-avatar\">\n                        {post.primary_author.profile_image ?\n                            <img className=\"author-profile-image\" src={post.primary_author.profile_image} alt={post.primary_author.name}/> :\n                            <img className=\"default-avatar\" src=\"/images/icons/avatar.svg\" alt={post.primary_author.name}/>\n                        }\n                    </div>\n                    <span>{ post.primary_author.name }</span>\n                </div>\n                <div className=\"post-card-footer-right\">\n                    <div>{readingTime}</div>\n                </div>\n            </footer>\n        </Link>\n    )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        feature_image: PropTypes.string,\n        featured: PropTypes.bool,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n            })\n        ),\n        excerpt: PropTypes.string.isRequired,\n        primary_author: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            profile_image: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n}\n\nexport default PostCard\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Pagination = ({ pageContext }) => {\r\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\r\n\r\n    return (\r\n        <nav className=\"pagination\" role=\"navigation\">\r\n            <div>\r\n                {previousPagePath && (\r\n\r\n                    <Link to={previousPagePath} rel=\"prev\">\r\n                            Previous\r\n                    </Link>\r\n\r\n                )}\r\n            </div>\r\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\r\n            <div>\r\n                {nextPagePath && (\r\n\r\n                    <Link to={nextPagePath} rel=\"next\">\r\n                            Next\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    pageContext: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\n/**\r\n* Navigation component\r\n*\r\n* The Navigation component takes an array of your Ghost\r\n* navigation property that is fetched from the settings.\r\n* It differentiates between absolute (external) and relative link (internal).\r\n* You can pass it a custom class for your own styles, but it will always fallback\r\n* to a `site-nav-item` class.\r\n*\r\n*/\r\nconst Navigation = ({ data, navClass }) => (\r\n    <>\r\n        {data.map((navItem, i) => {\r\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\r\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\r\n            } else {\r\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\r\n            }\r\n        })}\r\n    </>\r\n)\r\n\r\nNavigation.defaultProps = {\r\n    navClass: `site-nav-item`,\r\n}\r\n\r\nNavigation.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string.isRequired,\r\n            url: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ).isRequired,\r\n    navClass: PropTypes.string,\r\n}\r\n\r\nexport default Navigation\r\n","export { default as Layout } from './Layout'\r\nexport { default as PostCard } from './PostCard'\r\nexport { default as Pagination } from './Pagination'\r\nexport { default as Navigation } from './Navigation'\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}