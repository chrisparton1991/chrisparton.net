{"componentChunkName":"component---src-templates-tag-js","path":"/tag/electronics/","webpackCompilationHash":"dd511bba6275a630ede6","result":{"data":{"ghostTag":{"slug":"electronics","name":"electronics","visibility":"public","feature_image":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5d60ad315655c53c345c8092","title":"Interactive Staircase","slug":"interactive-staircase","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/thumbnail.jpg","excerpt":"My third ChrisLights project is something I've been meaning to try for quite some time: building an interactive staircase. I reached the #1 spot on /r/arduino with over 600 upvotes and 11K views.","custom_excerpt":"My third ChrisLights project is something I've been meaning to try for quite some time: building an interactive staircase. I reached the #1 spot on /r/arduino with over 600 upvotes and 11K views.","created_at_pretty":"24 August, 2019","published_at_pretty":"20 June, 2018","updated_at_pretty":"24 August, 2019","created_at":"2019-08-24T13:21:21.000+10:00","published_at":"2018-06-20T18:16:00.000+10:00","updated_at":"2019-08-24T13:24:13.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"chrislights","slug":"chrislights","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"My third ChrisLights [https://www.youtube.com/channel/UCG_ox3UgSRHj-m_zG_mJCUg] \nproject is something I've been meaning to try for quite some time: building an\ninteractive staircase.\n\nThe main blocker I always faced was the task of accurately sensing where a\nperson is on the staircase. I'd always imagined using an ultrasonic sensor for\nthis, but the results were far too erratic when using them in the confined space\naround my staircase.\n\nAfter realising that I could use an array of lasers and photoresistors instead,\nI ordered the components and started building.\n\nIt took a lot of work - especially on the wiring and soldering side of things -\nbut I was really happy with the end result and the response I got from the video\nblew me away! I reached the #1 spot on /r/arduino\n[https://www.reddit.com/r/arduino] with over 600 upvotes and 11K views\n[https://www.reddit.com/r/arduino/comments/8s4msz/i_just_finished_making_this_interactive_led]\n, got over 900 upvotes on 9gag\n[https://9gag.com/gag/adKoEjV/just-finished-making-these-interactive-led-stairs]\n, and I was retweeted by the official Arduino twitter\n[https://twitter.com/arduino/status/1009159342048907264].\n\nThe Results\nYou can see the results (and more of an explanation) in the video below:\n\nI'm busy working on a Part 2 video, which will add more sophisticated effects to\nthe staircase.","html":"<p>My third <a href=\"https://www.youtube.com/channel/UCG_ox3UgSRHj-m_zG_mJCUg\">ChrisLights</a> project is something I've been meaning to try for quite some time: building an interactive staircase.</p><p>The main blocker I always faced was the task of accurately sensing where a person is on the staircase. I'd always imagined using an ultrasonic sensor for this, but the results were far too erratic when using them in the confined space around my staircase.</p><p>After realising that I could use an array of lasers and photoresistors instead, I ordered the components and started building.</p><p>It took a lot of work - especially on the wiring and soldering side of things - but I was really happy with the end result and the response I got from the video blew me away! I reached the #1 spot on <a href=\"https://www.reddit.com/r/arduino\">/r/arduino</a> with <a href=\"https://www.reddit.com/r/arduino/comments/8s4msz/i_just_finished_making_this_interactive_led\">over 600 upvotes and 11K views</a>, got over <a href=\"https://9gag.com/gag/adKoEjV/just-finished-making-these-interactive-led-stairs\">900 upvotes on 9gag</a>, and I was <a href=\"https://twitter.com/arduino/status/1009159342048907264\">retweeted by the official Arduino twitter</a>.</p><h3 id=\"the-results\">The Results</h3><p>You can see the results (and more of an explanation) in the video below:</p><!--kg-card-begin: html--> <iframe src=\"https://www.youtube.com/embed/h5pk4Sp4jLw\" frameborder=\"0\" allowfullscreen></iframe><!--kg-card-end: html--><p>I'm busy working on a Part 2 video, which will add more sophisticated effects to the staircase.</p>","url":"http://localhost:2368/interactive-staircase/","uuid":"1b459a75-77e1-47b8-afe3-fd49d56ace02","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d60ad315655c53c345c8092"}},{"node":{"id":"Ghost__Post__5d60ac2c5655c53c345c806a","title":"Introducing ChrisLights!","slug":"introducing-chrislights","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/YouTube-Background.png","excerpt":"I've launched a new YouTube channel called ChrisLights. It's devoted to my love of lights, sound, games and code, and to projects that combine these elements into something unique and fun.","custom_excerpt":"I've launched a new YouTube channel called ChrisLights. It's devoted to my love of lights, sound, games and code, and to projects that combine these elements into something unique and fun.","created_at_pretty":"24 August, 2019","published_at_pretty":"16 April, 2018","updated_at_pretty":"24 August, 2019","created_at":"2019-08-24T13:17:00.000+10:00","published_at":"2018-04-17T07:43:00.000+10:00","updated_at":"2019-08-24T13:19:57.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"chrislights","slug":"chrislights","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"I've launched a new YouTube channel called ChrisLights\n[https://www.youtube.com/channel/UCG_ox3UgSRHj-m_zG_mJCUg]. It's devoted to my\nlove of lights, sound, games and code, and to projects that combine these\nelements into something unique and fun.\n\nDoom II Gets Lit Up!\nFor my first video, I wrote a Java application that analyses the ammo count\npixels of a running Doom II game. It uses this information to detect when\nbullets are fired and sends this data wirelessly to an ESP32. The ESP32 controls\nan LED strip, and sends different effects through the strip to correspond with\ngunfire from different weapons.\n\nIt was a lot of fun to create, and you can check it out below:","html":"<p>I've launched a new YouTube channel called <a href=\"https://www.youtube.com/channel/UCG_ox3UgSRHj-m_zG_mJCUg\">ChrisLights</a>. It's devoted to my love of lights, sound, games and code, and to projects that combine these elements into something unique and fun.</p><h3 id=\"doom-ii-gets-lit-up-\">Doom II Gets Lit Up!</h3><p>For my first video, I wrote a Java application that analyses the ammo count pixels of a running Doom II game. It uses this information to detect when bullets are fired and sends this data wirelessly to an ESP32. The ESP32 controls an LED strip, and sends different effects through the strip to correspond with gunfire from different weapons.</p><p>It was a lot of fun to create, and you can check it out below:</p><!--kg-card-begin: html--><iframe src=\"https://www.youtube.com/embed/Uxh_LZPdhqI\" frameborder=\"0\" allowfullscreen></iframe><!--kg-card-end: html-->","url":"http://localhost:2368/introducing-chrislights/","uuid":"af2af0b8-1d49-4021-916b-34f7964853fd","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d60ac2c5655c53c345c806a"}},{"node":{"id":"Ghost__Post__5d60abe55655c53c345c805b","title":"The LED Pixel Master Course","slug":"the-led-pixel-master-course","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/Course-Image.jpg","excerpt":"Today, I released The LED Pixel Master Course on Udemy! I've wanted to create a Udemy course for quite a while now, and I figured a course on LED pixels was the perfect place to start.","custom_excerpt":"Today, I released The LED Pixel Master Course on Udemy! I've wanted to create a Udemy course for quite a while now, and I figured a course on LED pixels was the perfect place to start.","created_at_pretty":"24 August, 2019","published_at_pretty":"11 April, 2018","updated_at_pretty":"24 August, 2019","created_at":"2019-08-24T13:15:49.000+10:00","published_at":"2018-04-12T00:58:00.000+10:00","updated_at":"2019-08-24T13:20:11.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"udemy","slug":"udemy","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Today, I released The LED Pixel Master Course on Udemy! I've wanted to create a\nUdemy course for quite a while now, and I figured a course on LED pixels was the\nperfect place to start.\n\nYou can use this link\n[https://www.udemy.com/the-led-pixel-master-course/?couponCode=LPMC10] to get\nthe course for $10 using a special coupon :)\n\nI created the course because I had to build up my knowledge of LED pixels by\ncobbling together information (and misinformation) from multiple sources,\nincluding documentation, forums, online videos and lots of trial and error. I\nwant the course to be a single place where people can get all of the information\nthey need to learn all about LED pixels and how to use them.\n\nThe course focuses on safety and best practices throughout, whereas most video\ntutorials are more like step-by-step guides that don't explain why things are\ndone the way they are.\n\nI'm really proud of how the course turned out. I know that things can be\nimproved (and they will be over time), but for my first course I think it's a\nsolid effort.\n\nI thought I'd jot down some notes on the things I learned whilst creating the\ncourse.\n\nCamera\nI mainly used my Canon EOS M with an 18-55mm lens (set at around 24mm) to record\nthe course. I made use of a macro lens for some closeup shots of LED pixels, and\nused my Galaxy S7 to record some of the soldering etc.\n\nLighting\nI had never really recorded myself on camera for anything online before, and I\ndidn't want cruddy video quality. I took a look at some lighting tutorials\nonline and quickly realised I'd need to get my hands on some softboxes or\numbrella lights. I ended up snagging a great bargain on Gumtree: three softboxes\n(one of them with a boom stand) and two umbrella lights with a carry case for\n$80.\n\nAudio\nI was initially planning on investing in a Blue Yeti mic for my audio, but I\nended up going with the Rode SmartLav+ lapel mic. They cost $58 but I got one\nfor $36 through a friend at JB. The audio quality of the mic is really quite\ngood, but the main downside is that the mic uses a TRRS connector, and needs a\n$15 adapter to work with a PC.\n\nI ended up using the mic as-is with my phone to record videos where my face is\nbeing recorded, and bought the adapter to record straight into Audacity for\nscreen recorded videos (which are the majority).\n\nSoftware\nI went with Camtasia Studio for putting my videos together. I have experience\nwith Adobe After Effects, but I felt it'd be too heavyweight for putting\ntogether a course, and I was looking for productivity. Aside from a couple of\nbugs, Camtasia has been fantastic for quickly putting videos together.","html":"<p>Today, I released The LED Pixel Master Course on Udemy! I've wanted to create a Udemy course for quite a while now, and I figured a course on LED pixels was the perfect place to start.</p><p>You can use <a href=\"https://www.udemy.com/the-led-pixel-master-course/?couponCode=LPMC10\">this link</a> to get the course for $10 using a special coupon :)</p><p>I created the course because I had to build up my knowledge of LED pixels by cobbling together information (and misinformation) from multiple sources, including documentation, forums, online videos and lots of trial and error. I want the course to be a single place where people can get all of the information they need to learn all about LED pixels and how to use them.</p><p>The course focuses on safety and best practices throughout, whereas most video tutorials are more like step-by-step guides that don't explain <em>why</em> things are done the way they are.</p><p>I'm really proud of how the course turned out. I know that things can be improved (and they will be over time), but for my first course I think it's a solid effort.</p><p>I thought I'd jot down some notes on the things I learned whilst creating the course.</p><h3 id=\"camera\">Camera</h3><p>I mainly used my Canon EOS M with an 18-55mm lens (set at around 24mm) to record the course. I made use of a macro lens for some closeup shots of LED pixels, and used my Galaxy S7 to record some of the soldering etc.</p><h3 id=\"lighting\">Lighting</h3><p>I had never really recorded myself on camera for anything online before, and I didn't want cruddy video quality. I took a look at some lighting tutorials online and quickly realised I'd need to get my hands on some softboxes or umbrella lights. I ended up snagging a great bargain on Gumtree: three softboxes (one of them with a boom stand) and two umbrella lights with a carry case for $80.</p><h3 id=\"audio\">Audio</h3><p>I was initially planning on investing in a Blue Yeti mic for my audio, but I ended up going with the Rode SmartLav+ lapel mic. They cost $58 but I got one for $36 through a friend at JB. The audio quality of the mic is really quite good, but the main downside is that the mic uses a TRRS connector, and needs a $15 adapter to work with a PC.</p><p>I ended up using the mic as-is with my phone to record videos where my face is being recorded, and bought the adapter to record straight into Audacity for screen recorded videos (which are the majority).</p><h3 id=\"software\">Software</h3><p>I went with Camtasia Studio for putting my videos together. I have experience with Adobe After Effects, but I felt it'd be too heavyweight for putting together a course, and I was looking for productivity. Aside from a couple of bugs, Camtasia has been fantastic for quickly putting videos together.</p>","url":"http://localhost:2368/the-led-pixel-master-course/","uuid":"2b0e462e-39c3-47c6-89ad-cb66036bf098","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d60abe55655c53c345c805b"}},{"node":{"id":"Ghost__Post__5d60ab455655c53c345c8049","title":"Christmas Lights 2017","slug":"christmas-lights-2017","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/lights.jpg","excerpt":"I decided to temporarily shelve my game and throw myself back into Christmas lights. I dusted off Sparkled and got to work. I'm really proud of what I accomplished in the last three months of the year.","custom_excerpt":"I decided to temporarily shelve my game and throw myself back into Christmas lights. I dusted off Sparkled and got to work. I'm really proud of what I accomplished in the last three months of the year.","created_at_pretty":"24 August, 2019","published_at_pretty":"02 January, 2018","updated_at_pretty":"24 August, 2019","created_at":"2019-08-24T13:13:09.000+10:00","published_at":"2018-01-02T18:53:00.000+11:00","updated_at":"2019-08-24T13:20:46.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"christmas lights","slug":"christmas-lights","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"sparkled","slug":"sparkled","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"2017 was a year of many side projects for me. The majority of the year was\nfocused on building my first game for GirtGames and I didn't think I'd have time\nto put anything together for Christmas. As is my way, however, I ran out of\nsteam on my GirtGames project in September and felt myself being pulled back\ntowards Christmas lights.\n\nNot wanting to work on a project I wasn't interested in, I decided to\ntemporarily shelve my game and throw myself back into Christmas lights. I dusted\noff Sparkled and got to work. I'm really proud of what I accomplished in the\nlast three months of the year.\n\nI started off by doing a huge refactor of the codebase. I changed the underlying\ndatabase from Postgres to file-based H2 and completed loads of missing\nfunctionality. I was working away at this all through December, so I didn't have\na lot of time to actually sequence the music.\n\nA Sneak Peek\nHere's a sequence playing against a shortened, instrumental version of\nColdplay's A Sky Full Of Stars:\n\nI put this together in around three hours total. I made some mistakes with the\nsequence and the music is a little off-sync because I hastily added a clean\naudio track over top of the recorded audio, but the video shows that Sparkled is\ncapable of pulling off an awesome Christmas display.\n\nWhat's Next\nI'm feeling ready to jump back in to GirtGames and get my first game out to the\nworld. I'll still be devoting lots of time to Sparkled throughout the year. I'll\nbe adding new features and effects, rewriting the UI in React, and building a\nsignificantly better Christmas display.\n\nI moved Sparkled to its own GitHub organisation and created some basic content\nfor sparkled.io with the hope that a community will form around the software as\nit becomes more feature complete.","html":"<p>2017 was a year of many side projects for me. The majority of the year was focused on building my first game for GirtGames and I didn't think I'd have time to put anything together for Christmas. As is my way, however, I ran out of steam on my GirtGames project in September and felt myself being pulled back towards Christmas lights.</p><p>Not wanting to work on a project I wasn't interested in, I decided to temporarily shelve my game and throw myself back into Christmas lights. I dusted off Sparkled and got to work. I'm really proud of what I accomplished in the last three months of the year.</p><p>I started off by doing a huge refactor of the codebase. I changed the underlying database from Postgres to file-based H2 and completed loads of missing functionality. I was working away at this all through December, so I didn't have a lot of time to actually sequence the music.</p><h4 id=\"a-sneak-peek\">A Sneak Peek</h4><p>Here's a sequence playing against a shortened, instrumental version of Coldplay's A Sky Full Of Stars:</p><!--kg-card-begin: html-->  <iframe src=\"https://www.youtube.com/embed/LjgJN3SzmT0\" frameborder=\"0\" allowfullscreen></iframe><!--kg-card-end: html--><p>I put this together in around three hours total. I made some mistakes with the sequence and the music is a little off-sync because I hastily added a clean audio track over top of the recorded audio, but the video shows that Sparkled is capable of pulling off an awesome Christmas display.</p><h4 id=\"what-s-next\">What's Next</h4><p>I'm feeling ready to jump back in to GirtGames and get my first game out to the world. I'll still be devoting lots of time to Sparkled throughout the year. I'll be adding new features and effects, rewriting the UI in React, and building a significantly better Christmas display.</p><p>I moved Sparkled to its own GitHub organisation and created some basic content for <a>sparkled.io</a> with the hope that a community will form around the software as it becomes more feature complete.</p>","url":"http://localhost:2368/christmas-lights-2017/","uuid":"63f8ec24-11e9-4fbe-abdd-74943e82eab3","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d60ab455655c53c345c8049"}},{"node":{"id":"Ghost__Post__5d60aac65655c53c345c8034","title":"My First Jack-O'-Lantern","slug":"my-first-jack-o-lantern","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/jack-o-lantern.jpg","excerpt":"Halloween isn't a traditional Australian holiday, but it is becoming more prevalent with each passing year. I thought it'd be neat to try my hand at making a jack-o'-lantern.","custom_excerpt":"Halloween isn't a traditional Australian holiday, but it is becoming more prevalent with each passing year. I thought it'd be neat to try my hand at making a jack-o'-lantern.","created_at_pretty":"24 August, 2019","published_at_pretty":"03 November, 2017","updated_at_pretty":"24 August, 2019","created_at":"2019-08-24T13:11:02.000+10:00","published_at":"2017-11-03T16:35:00.000+11:00","updated_at":"2019-08-24T13:12:36.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"halloween","slug":"halloween","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Halloween isn't a traditional Australian holiday, but it is becoming more\nprevalent with each passing year.\n\nI haven't really embraced the phenomenon myself, but when I found carving\npumpkins at my local supermarket I thought it'd be neat to try my hand at making\na jack-o'-lantern.\n\nI downloaded a face template online and drew it on to my pumpkin, then carved it\nout using my Dremel and its multipurpose cutting bit\n[https://www.dremel.com/en_US/products/-/show-product/accessories/561-multipurpose-cutting-bit]\n. I also added a bit of old LED strip powered by a small LiPO battery and\nArduino Nano running the Fire2012WithPalette FastLED effect\n[https://github.com/FastLED/FastLED/blob/master/examples/Fire2012WithPalette/Fire2012WithPalette.ino]\n.\n\nI was really happy with the result, given that the whole exercise only took a\ncouple of hours. You can see it in action below:","html":"<p>Halloween isn't a traditional Australian holiday, but it is becoming more prevalent with each passing year.</p><p>I haven't really embraced the phenomenon myself, but when I found carving pumpkins at my local supermarket I thought it'd be neat to try my hand at making a jack-o'-lantern.</p><p>I downloaded a face template online and drew it on to my pumpkin, then carved it out using my Dremel and its <a href=\"https://www.dremel.com/en_US/products/-/show-product/accessories/561-multipurpose-cutting-bit\">multipurpose cutting bit</a>. I also added a bit of old LED strip powered by a small LiPO battery and Arduino Nano running the <a href=\"https://github.com/FastLED/FastLED/blob/master/examples/Fire2012WithPalette/Fire2012WithPalette.ino\">Fire2012WithPalette FastLED effect</a>.</p><p>I was really happy with the result, given that the whole exercise only took a couple of hours. You can see it in action below:</p><!--kg-card-begin: html--><iframe src=\"https://www.youtube.com/embed/BtMYZkRteZU\" frameborder=\"0\" allowfullscreen></iframe><!--kg-card-end: html-->","url":"http://localhost:2368/my-first-jack-o-lantern/","uuid":"765778ea-53da-4a51-a456-4201a664151f","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d60aac65655c53c345c8034"}},{"node":{"id":"Ghost__Post__5d60a8f85655c53c345c800a","title":"Christmas Lights 2016","slug":"christmas-lights-2016","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/xmas2016.jpg","excerpt":"I was really proud of myself for getting a display working with LED strips. I failed plenty of times along the way, but I got there in the end. I'm utilising the FastLED library, which does a lot of the heavy lifting for me.","custom_excerpt":"I was really proud of myself for getting a display working with LED strips. I failed plenty of times along the way, but I got there in the end. I'm utilising the FastLED library, which does a lot of the heavy lifting for me.","created_at_pretty":"24 August, 2019","published_at_pretty":"21 December, 2016","updated_at_pretty":"24 August, 2019","created_at":"2019-08-24T13:03:20.000+10:00","published_at":"2016-12-22T03:09:00.000+11:00","updated_at":"2019-08-24T13:08:04.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"christmas lights","slug":"christmas-lights","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"software","slug":"software","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"My Christmas light display for 2016 is a definite improvement from what I had in\n2015. I didn't meet my goal of having lights synchronised to music (which I'll\nexplain below), but I succeeded in putting together a reliable animation\nsequence using LED strips powered by an Arduino.\n\nYou can see the video below:\n\nI was looking through an Arduino blog post\n[https://blog.arduino.cc/2016/12/19/12-dazzling-holiday-light-displays-with-arduino/] \ntitled \"12 Dazzling Holiday Light Displays With Arduino\" one morning, and I was\npleasantly surprised to find my lights included in the list!\n\nGoals Accomplished\nI was really proud of myself for getting a display working with LED strips. I\nfailed plenty of times along the way, but I got there in the end. I'm utilising\nthe FastLED [https://fastled.io] library, which does a lot of the heavy lifting\nfor me.\n\nMy wiring is far from perfect, but it's a whole lot more robust than last year's\nefforts. I've learned a lot from this experience, and I think next year's lights\nwill be even more reliable. I've had just one cable-related issue with this\nyear's lights.\n\nGoals Missed\nI really wanted to have full sequencing working for this year's lights. I\nactually made a fair amount of progress down this road. I had my LED sequencing\nsoftware essentially working, and I could drive LED strips just fine. The main\nthing I had to figure out was how to turn those bytes of data into a kickass\nshow.\n\nAfter some experimentation, I started down the path of using one Arduino Due to\ndrive all of my LED strips. The Arduino would read the animation data from an SD\ncard and spit it out as needed. There were some downfalls with this approach,\nbut I didn't even get far enough to consider solving those.\n\nA Problem Of Distance\nMy display is using cheap-and-nasty UCS1903 LED strips. They generally do the\njob fine, but the data signal does not handle long distances very well. Even\nwith optimal placement of my Arduino Due (which would expose it to the\nelements), the distance between the Due and the farthest LED strips was so great\nthat the signal degraded to the point that the LED strips didn't even recognise\nit.\n\nGiving Up\nThis issue stumped me, and extinguished the flame that was my enthusiasm for the\nproject. I didn't touch it for quite some time. Eventually, I decided I still\nwanted something for this Christmas, and that something is what you can see in\nthe video above.\n\nAn Epiphany\nWhilst I was building my compromise project, I came across the wonders of the \nESP8266 [https://www.sparkfun.com/products/13678]. The ESP8266 (more accurately,\nthe ESP8266-based boards such as the ESP-01) are a Wi-Fi enabled microcontroller\nthat pack quite a bit of processing power inside a tiny form factor for a very\nsmall price.\n\nI ordered a few of these from eBay and played around with them. I realised that\nthese chips could make my Christmas light dreams a reality. My sequencing\nsoftware would contain a UDP server that could be polled by 8266 boards to get\nanimation data and feed it to the LED strips. This approach works nicely for a\nfew reasons:\n\n * The 8266 controllers can be situated right next to the LED strips, so long as\n   they're within range of the Wi-Fi signal.\n * The server design means that the 8266 chips don't need to worry about\n   synchronising data, and can tolerate dropped packets and even a network\n   dropout.\n\nThis is what I'm working now, and will (hopefully) be the subject of various\nblog posts throughout the next year.\n\nUntil then, I'm happy with what I've been able to pull off for 2016.","html":"<p>My Christmas light display for 2016 is a definite improvement from what I had in 2015. I didn't meet my goal of having lights synchronised to music (which I'll explain below), but I succeeded in putting together a reliable animation sequence using LED strips powered by an Arduino.</p><p>You can see the video below:</p><!--kg-card-begin: html--><iframe src=\"https://www.youtube.com/embed/jXiJ57UzuP8\" frameborder=\"0\" allowfullscreen></iframe><!--kg-card-end: html--><p>I was looking through an <a href=\"https://blog.arduino.cc/2016/12/19/12-dazzling-holiday-light-displays-with-arduino/\">Arduino blog post</a> titled \"12 Dazzling Holiday Light Displays With Arduino\" one morning, and I was pleasantly surprised to find my lights included in the list!</p><h4 id=\"goals-accomplished\">Goals Accomplished</h4><p>I was really proud of myself for getting a display working with LED strips. I failed plenty of times along the way, but I got there in the end. I'm utilising the <a href=\"https://fastled.io\">FastLED</a> library, which does a lot of the heavy lifting for me.</p><p>My wiring is far from perfect, but it's a whole lot more robust than last year's efforts. I've learned a lot from this experience, and I think next year's lights will be even more reliable. I've had just one cable-related issue with this year's lights.</p><h4 id=\"goals-missed\">Goals Missed</h4><p>I really wanted to have full sequencing working for this year's lights. I actually made a fair amount of progress down this road. I had my LED sequencing software essentially working, and I could drive LED strips just fine. The main thing I had to figure out was how to turn those bytes of data into a kickass show.</p><p>After some experimentation, I started down the path of using one Arduino Due to drive all of my LED strips. The Arduino would read the animation data from an SD card and spit it out as needed. There were some downfalls with this approach, but I didn't even get far enough to consider solving those.</p><h5 id=\"a-problem-of-distance\">A Problem Of Distance</h5><p>My display is using cheap-and-nasty UCS1903 LED strips. They generally do the job fine, but the data signal does not handle long distances very well. Even with optimal placement of my Arduino Due (which would expose it to the elements), the distance between the Due and the farthest LED strips was so great that the signal degraded to the point that the LED strips didn't even recognise it.</p><h5 id=\"giving-up\">Giving Up</h5><p>This issue stumped me, and extinguished the flame that was my enthusiasm for the project. I didn't touch it for quite some time. Eventually, I decided I still wanted <em>something</em> for this Christmas, and that something is what you can see in the video above.</p><h5 id=\"an-epiphany\">An Epiphany</h5><p>Whilst I was building my compromise project, I came across the wonders of the <a href=\"https://www.sparkfun.com/products/13678\">ESP8266</a>. The ESP8266 (more accurately, the ESP8266-based boards such as the ESP-01) are a Wi-Fi enabled microcontroller that pack quite a bit of processing power inside a tiny form factor for a very small price.</p><p>I ordered a few of these from eBay and played around with them. I realised that these chips could make my Christmas light dreams a reality. My sequencing software would contain a UDP server that could be polled by 8266 boards to get animation data and feed it to the LED strips. This approach works nicely for a few reasons:</p><ul><li>The 8266 controllers can be situated right next to the LED strips, so long as they're within range of the Wi-Fi signal.</li><li>The server design means that the 8266 chips don't need to worry about synchronising data, and can tolerate dropped packets and even a network dropout.</li></ul><p>This is what I'm working now, and will (hopefully) be the subject of various blog posts throughout the next year.</p><p>Until then, I'm happy with what I've been able to pull off for 2016.</p>","url":"http://localhost:2368/christmas-lights-2016/","uuid":"f1a9da9d-800e-4053-a907-7cf123969cff","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d60a8f85655c53c345c800a"}},{"node":{"id":"Ghost__Post__5d5d37cb5655c53c345c7fa2","title":"A Home-made PCB Workstation On A Budget","slug":"a-home-made-pcb-workstation-on-a-budget","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/my-pcb-workstation.jpg","excerpt":"As I began learning how to solder, I found the third hand quite useful for holding circuit boards and wires. However, as I progressed I grew more and more frustrated with the lack of manoeuvrability the third hand provided.","custom_excerpt":"As I began learning how to solder, I found the third hand quite useful for holding circuit boards and wires. However, as I progressed I grew more and more frustrated with the lack of manoeuvrability the third hand provided.","created_at_pretty":"21 August, 2019","published_at_pretty":"02 March, 2016","updated_at_pretty":"24 August, 2019","created_at":"2019-08-21T22:23:39.000+10:00","published_at":"2016-03-02T11:20:00.000+11:00","updated_at":"2019-08-24T13:39:20.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Third Hand\nBack before I started tinkering with electronics, I bought a third hand. I\ndidn't have any particular use for it, I just thought it was a nifty thing to\nhave laying around.\n\nAs I began learning how to solder, I found the third hand quite useful for\nholding circuit boards and wires. However, as I progressed I grew more and more\nfrustrated with the lack of manoeuvrability the third hand provided.\n\nIf you haven't seen one of these before, they look like this:\n\n\nA \"third hand\" tool, useful for holding wires and components when solderingThird\nHand++\nThe horizontal bar that connects the arms to the stands limits the usefulness of\nthis tool. I looked online for alternatives, and found an Instructable for a\nhome-made PCB workstation called Third Hand++\n[http://www.instructables.com/id/Third-Hand-A-multi-use-helping-hand-for-electro/]\n:\n\n\nLike a third hand, but more flexibleI liked this setup much more than the\nconventional third hand. Unfortunately, living in Australia, some of these\nmaterials aren't as easy or cheap to come by. Therefore, I decided to make my\nown clone of the Third Hand++, using cheap and/or readily available materials.\n\nMy PCB Workstation\nHere's my workstation, in all its splendour:\n\n\nMy take on the Third Hand++Equipment Required\n * Some kind of cutting device, e.g. circular saw, jigsaw, hacksaw (along with\n   appropriate safety gear!)\n * Hot glue gun (I suspect a silicone gun would work too)\n * Blu-Tack\n * Electric drill\n * 3mm bit\n * 5mm bit\n * 10mm bit\n\nMaterials\nItem Price (AUD) Projecta Alligator Clips - 6 Pack\n[http://www.bunnings.com.au/projecta-alligator-clips-6-pack_p6330687] $2.50\n(Bunnings) CustomWood MDF 900 x 450 x 12mm Standard MDF Panel\n[http://www.bunnings.com.au/customwood-mdf-900-x-450-x-12mm-standard-mdf-panel_p0590092]\n $8.15 (Bunnings) Fiddly Bits 250g Flat Black Spray Paint\n[http://www.bunnings.com.au/fiddly-bits-250g-flat-black-spray-paint_p1580054] \n$2.95 (Bunnings) 20mm x 3mm Steel Screws - Pk.25\n[http://www.jaycar.com.au/Electromechanical-Components/Fasteners-%26-Hardware/Fasteners/20mm-x-3mm-Steel-Screws---Pk-25/p/HP0410]\n $3.50 (Jaycar) 3mm Steel Nuts - Pk.25\n[http://www.jaycar.com.au/Electromechanical-Components/Fasteners-%26-Hardware/Fasteners/3mm-Steel-Nuts---Pk-25/p/HP0425]\n $2.95 (Jaycar) Madico 19mm Clear Round Vinyl Surface Protection Bumper Pads -\n6\nPack\n[http://www.bunnings.com.au/madico-19mm-clear-round-vinyl-surface-protection-bumper-pads-6-pack_p3979349]\n $4.25 (Bunnings) 2 mini tripods (search eBay for \"Mini Octopus Flexible\nTripod\", lowest price first) Approx. $7.50 for 2 tripods (eBay) Total: $31.80\nIt's worth noting that all of the above materials, apart from the tripods and\n(optional) foot stickers, are enough to make at least two of my PCB\nworkstations. If you can find a smaller MDF board and smaller packs of screws\nand nuts, you will be able to significantly reduce the price to create one\nworkstation.\n\nConstruction\nStep 1: Measure and Cut MDF\nYou can make your workstation any size you like, but there are multiple\nvariables to consider, such as:\n\n * The weight of the base\n * Ease of portability\n * The size of the PCBs you want to work on\n * The number of anchor points you want\n * The strength and flexibility of the arms\n\nThe last one is important. If your arms are too long, they won't be able to hold\nmuch weight at all. However, if they are too short, they won't be flexible\nenough to be particularly useful.\n\nI settled on making my board 25x25 cm with 8 anchor points, which I'm happy with\nin retrospect.\n\nSo, the first task is to cut your board to size.\n\nStep 2: Mark the Holes\nI made my four corner anchor point holes 2.5cm from each side of the board. The\nmiddle four anchor points are simply the midpoints between the others.\n\nMy resized MDF board with marked anchor point holes:\n\nThe MDF with holes marked for drillingStep 3: Drill the Holes\nUsing a 3mm drill bit, drill out all of your marked anchor points, the whole way\nthrough.\n\nUsing a 10mm drill bit, drill  shallow holes into the anchor points on the\nunderside of the MDF (it doesn't matter which side, use the rougher/uglier side\nif there is one). The idea here is to provide a hole large enough for the nut to\nfit into so the MDF can sit flush on a surface.\n\n\nThe MDF with holds drilled and countersunkStep 4: Spray Paint\nThis is where you can let your inner artist blossom, or in my case, not. I opted\nfor el cheapo matte black spray paint, which looks awful in the image below.\nThis is largely because I don't have much experience spray painting, and also\nbecause the camera flash throws my inadequacies into sharp relief.\n\nStill, my advice is to make several light passes over one side (and the edges),\nthen flip and repeat once the paint is dry.\n\nStep 5: Attach Bumper Pads\nNothing too exciting here, just flip your MDF over and stick on the rubber/vinyl\nbumper pads. This will prevent your workstation from scratching whatever it's\nsitting on as you move it around.\n\nStep 6: Attach Anchor Points\nYou know those tripods I told you to buy? This is where they start becoming\nuseful. Yank off the three legs, and do what you wish with the holder section.\n\nWith a little force, these segmented legs come apart. Pull out as many\nindividual segments as you have anchor points, and drill a hole down the middle\nof them using a 3mm bit. I used my Dremel drill press\n[https://www.dremel.com/en-au/attachments/pages/productdetail.aspx?pid=220-01],\nbut I imagine it can be done using a regular drill and. Be careful to get the\nhole in the centre, or you'll drill through the side of the anchor point.\n\nIf you've succeeded, you should now be able to attach the anchor points to your\nMDF using the 20mm screws. These screws were just long enough for me to attach\nwith countersunk holes. I had to make a few of my countersinks a bit deeper to\nget them on. I put my screws in so that the nuts are on the underside of the\nboard, and the screwheads are in the top of the anchor points.\n\nOnce your anchor points are attached, you should have something that looks\nroughly like this:\n\nNearly done! Anchor points attached and sprayed matte blackStep 7: Make Tool\nArms\nNow for the (relatively) tricky part: putting the alligator clips into segments\nto form tool arms. Start by figuring out how many clips you think will be\nuseful. If you want lots of clips, you may have to purchase more tripods so you\nhave more arm segments to work with. I decided to make four tool arms.\n\nMy alligator clips have a 5mm diameter at their base, so I drilled a 5mm hole\ninto four segments (I actually used my Dremel cutting bit\n[https://www.dremel.com/en-au/Accessories/Pages/ProductDetail.aspx?pid=561] to\nhack a hole roughly 5mm, but a 5mm hole would be a bit cleaner. You can see my\nrough handiwork below:\n\nA drilled segment, ready for an alligator clipNow, get a blob of Blu-Tack about\nthe size of a grape. Sit the anchor point on it, large side touching the tack.\nPush hard so that the tack fills up most of the large chamber in the segment.\n\nNext, gently push an alligator clip through the top (small) hole, so that it's\nheld in place by the tack. The clip should protrude from the segment just enough\nto allow the clip to be opened and closed without interference.\n\nFinally, use a hot glue gun to pump glue in around the clip shaft, filling up\nthe small chamber. Leave to solidify, then gently remove the tack. The large\nchamber should be mostly devoid of glue, as it needs to be empty to accommodate\nother segments being pushed into it.\n\nIf you want to tidy up the glue, you can carefully cut and scrape away excess\nusing a sharp blade like a craft or X-Acto knife.\n\nThe end result should look something like this:\n\nA segment with an alligator clip attached using hot glueStep 8: Pat Self On Back\nCongratulations, you've created all of the components for your PCB workstation!\nAll you have to do now is grab a chain of segments, plug them into an anchor\npoint, and attach a tool arm to the end of the segment chain.\n\nFuture Enhancements\nThere are a few things that could be done to this workstation to make it even\nniftier, such as:\n\n * An LED tool arm, powered by 2xAA batteries attached to the board.\n * A small fan tool arm, to extract soldering fumes (maybe the fan could be held\n   up like a diamond, with two anchor points for added stability. This would\n   need to be powered from something beefier, like a 12V power supply.\n * Shrink wrapping the alligator clip jaws to help prevent wear and tear to\n   PCBs.\n * Attaching a PCB Holder\n   [http://www.aliexpress.com/price/baku-pcb-holder_price.html] to the base of\n   the workstation.","html":"<h2 id=\"third-hand\">Third Hand</h2><p>Back before I started tinkering with electronics, I bought a third hand. I didn't have any particular use for it, I just thought it was a nifty thing to have laying around.</p><p>As I began learning how to solder, I found the third hand quite useful for holding circuit boards and wires. However, as I progressed I grew more and more frustrated with the lack of manoeuvrability the third hand provided.</p><p>If you haven't seen one of these before, they look like this:<br></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-24.png\" class=\"kg-image\"><figcaption>A \"third hand\" tool, useful for holding wires and components when soldering</figcaption></figure><!--kg-card-end: image--><h2 id=\"third-hand-\">Third Hand++</h2><p>The horizontal bar that connects the arms to the stands limits the usefulness of this tool. I looked online for alternatives, and found an Instructable for a home-made PCB workstation called <a href=\"http://www.instructables.com/id/Third-Hand-A-multi-use-helping-hand-for-electro/\">Third Hand++</a>:<br></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-25.png\" class=\"kg-image\"><figcaption>Like a third hand, but more flexible</figcaption></figure><!--kg-card-end: image--><p>I liked this setup much more than the conventional third hand. Unfortunately, living in Australia, some of these materials aren't as easy or cheap to come by. Therefore, I decided to make my own clone of the Third Hand++, using cheap and/or readily available materials.</p><h2 id=\"my-pcb-workstation\">My PCB Workstation</h2><p>Here's my workstation, in all its splendour:<br></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-26.png\" class=\"kg-image\"><figcaption>My take on the Third Hand++</figcaption></figure><!--kg-card-end: image--><h3 id=\"equipment-required\">Equipment Required</h3><ul><li>Some kind of cutting device, e.g. circular saw, jigsaw, hacksaw (along with appropriate safety gear!)</li><li>Hot glue gun (I suspect a silicone gun would work too)</li><li>Blu-Tack</li><li>Electric drill</li><li>3mm bit</li><li>5mm bit</li><li>10mm bit</li></ul><h3 id=\"materials\">Materials</h3><!--kg-card-begin: html--><table>\n<tr>\n  <th>Item</th>\n  <th>Price (AUD)</th>\n</tr>\n<tr>\n  <td><a href=\"http://www.bunnings.com.au/projecta-alligator-clips-6-pack_p6330687\" target=\"_blank\">Projecta Alligator Clips - 6 Pack</a></td>\n  <td>$2.50 (Bunnings)</td>\n</tr>\n\n<tr>\n  <td><a href=\"http://www.bunnings.com.au/customwood-mdf-900-x-450-x-12mm-standard-mdf-panel_p0590092\" target=\"_blank\">CustomWood MDF 900 x 450 x 12mm Standard MDF Panel</a></td>\n  <td>$8.15 (Bunnings)</td>\n</tr>\n\n<tr>\n  <td><a href=\"http://www.bunnings.com.au/fiddly-bits-250g-flat-black-spray-paint_p1580054\" target=\"_blank\">Fiddly Bits 250g Flat Black Spray Paint</a></td>\n  <td>$2.95 (Bunnings)</td>\n</tr>\n\n<tr>\n  <td><a href=\"http://www.jaycar.com.au/Electromechanical-Components/Fasteners-%26-Hardware/Fasteners/20mm-x-3mm-Steel-Screws---Pk-25/p/HP0410\" target=\"_blank\">20mm x 3mm Steel Screws - Pk.25</a></td>\n  <td>$3.50 (Jaycar)</td>\n</tr>\n\n<tr>\n  <td><a href=\"http://www.jaycar.com.au/Electromechanical-Components/Fasteners-%26-Hardware/Fasteners/3mm-Steel-Nuts---Pk-25/p/HP0425\" target=\"_blank\">3mm Steel Nuts - Pk.25</a></td>\n  <td>$2.95 (Jaycar)</td>\n</tr>\n\n<tr>\n  <td><a href=\"http://www.bunnings.com.au/madico-19mm-clear-round-vinyl-surface-protection-bumper-pads-6-pack_p3979349\" target=\"_blank\">Madico 19mm Clear Round Vinyl Surface Protection Bumper Pads - 6 Pack</a></td>\n  <td>$4.25 (Bunnings)</td>\n</tr>\n\n<tr>\n  <td>2 mini tripods (search eBay for \"Mini Octopus Flexible Tripod\", lowest price first)</td>\n  <td>Approx. $7.50 for 2 tripods (eBay)</td>\n</tr>\n<tr>\n  <th style=\"text-align: right\">Total:</th>\n  <th>$31.80</th>\n</tr>\n</table><!--kg-card-end: html--><p>It's worth noting that all of the above materials, apart from the tripods and (optional) foot stickers, are enough to make at least two of my PCB workstations. If you can find a smaller MDF board and smaller packs of screws and nuts, you will be able to significantly reduce the price to create one workstation.</p><h2 id=\"construction\">Construction</h2><h3 id=\"step-1-measure-and-cut-mdf\">Step 1: Measure and Cut MDF</h3><p>You can make your workstation any size you like, but there are multiple variables to consider, such as:</p><ul><li>The weight of the base</li><li>Ease of portability</li><li>The size of the PCBs you want to work on</li><li>The number of anchor points you want</li><li>The strength and flexibility of the arms</li></ul><p>The last one is important. If your arms are too long, they won't be able to hold much weight at all. However, if they are too short, they won't be flexible enough to be particularly useful.</p><p>I settled on making my board 25x25 cm with 8 anchor points, which I'm happy with in retrospect.</p><p>So, the first task is to cut your board to size.</p><h3 id=\"step-2-mark-the-holes\">Step 2: Mark the Holes</h3><p>I made my four corner anchor point holes 2.5cm from each side of the board. The middle four anchor points are simply the midpoints between the others.</p><p>My resized MDF board with marked anchor point holes:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-27.png\" class=\"kg-image\"><figcaption>The MDF with holes marked for drilling</figcaption></figure><!--kg-card-end: image--><h3 id=\"step-3-drill-the-holes\">Step 3: Drill the Holes</h3><p>Using a 3mm drill bit, drill out all of your marked anchor points, the whole way through.</p><p>Using a 10mm drill bit, drill  shallow holes into the anchor points on the underside of the MDF (it doesn't matter which side, use the rougher/uglier side if there is one). The idea here is to provide a hole large enough for the nut to fit into so the MDF can sit flush on a surface.<br></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-28.png\" class=\"kg-image\"><figcaption>The MDF with holds drilled and countersunk</figcaption></figure><!--kg-card-end: image--><h3 id=\"step-4-spray-paint\">Step 4: Spray Paint</h3><p>This is where you can let your inner artist blossom, or in my case, not. I opted for el cheapo matte black spray paint, which looks awful in the image below. This is largely because I don't have much experience spray painting, and also because the camera flash throws my inadequacies into sharp relief.</p><p>Still, my advice is to make several light passes over one side (and the edges), then flip and repeat once the paint is dry.</p><h3 id=\"step-5-attach-bumper-pads\">Step 5: Attach Bumper Pads</h3><p>Nothing too exciting here, just flip your MDF over and stick on the rubber/vinyl bumper pads. This will prevent your workstation from scratching whatever it's sitting on as you move it around.</p><h3 id=\"step-6-attach-anchor-points\">Step 6: Attach Anchor Points</h3><p>You know those tripods I told you to buy? This is where they start becoming useful. Yank off the three legs, and do what you wish with the holder section.</p><p>With a little force, these segmented legs come apart. Pull out as many individual segments as you have anchor points, and drill a hole down the middle of them using a 3mm bit. I used my <a href=\"https://www.dremel.com/en-au/attachments/pages/productdetail.aspx?pid=220-01\">Dremel drill press</a>, but I imagine it can be done using a regular drill and. Be careful to get the hole in the centre, or you'll drill through the side of the anchor point.</p><p>If you've succeeded, you should now be able to attach the anchor points to your MDF using the 20mm screws. These screws were <em>just</em> long enough for me to attach with countersunk holes. I had to make a few of my countersinks a bit deeper to get them on. I put my screws in so that the nuts are on the underside of the board, and the screwheads are in the top of the anchor points.</p><p>Once your anchor points are attached, you should have something that looks roughly like this:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-29.png\" class=\"kg-image\"><figcaption>Nearly done! Anchor points attached and sprayed matte black</figcaption></figure><!--kg-card-end: image--><h3 id=\"step-7-make-tool-arms\">Step 7: Make Tool Arms</h3><p>Now for the (relatively) tricky part: putting the alligator clips into segments to form tool arms. Start by figuring out how many clips you think will be useful. If you want lots of clips, you may have to purchase more tripods so you have more arm segments to work with. I decided to make four tool arms.</p><p>My alligator clips have a 5mm diameter at their base, so I drilled a 5mm hole into four segments (I actually used my <a href=\"https://www.dremel.com/en-au/Accessories/Pages/ProductDetail.aspx?pid=561\">Dremel cutting bit</a> to hack a hole roughly 5mm, but a 5mm hole would be a bit cleaner. You can see my rough handiwork below:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-30.png\" class=\"kg-image\"><figcaption>A drilled segment, ready for an alligator clip</figcaption></figure><!--kg-card-end: image--><p>Now, get a blob of Blu-Tack about the size of a grape. Sit the anchor point on it, large side touching the tack. Push hard so that the tack fills up most of the large chamber in the segment.</p><p>Next, gently push an alligator clip through the top (small) hole, so that it's held in place by the tack. The clip should protrude from the segment just enough to allow the clip to be opened and closed without interference.</p><p>Finally, use a hot glue gun to pump glue in around the clip shaft, filling up the small chamber. Leave to solidify, then gently remove the tack. The large chamber should be mostly devoid of glue, as it needs to be empty to accommodate other segments being pushed into it.</p><p>If you want to tidy up the glue, you can carefully cut and scrape away excess using a sharp blade like a craft or X-Acto knife.</p><p>The end result should look something like this:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-31.png\" class=\"kg-image\"><figcaption>A segment with an alligator clip attached using hot glue</figcaption></figure><!--kg-card-end: image--><h3 id=\"step-8-pat-self-on-back\">Step 8: Pat Self On Back</h3><p>Congratulations, you've created all of the components for your PCB workstation! All you have to do now is grab a chain of segments, plug them into an anchor point, and attach a tool arm to the end of the segment chain.</p><h2 id=\"future-enhancements\">Future Enhancements</h2><p>There are a few things that could be done to this workstation to make it even niftier, such as:</p><ul><li>An LED tool arm, powered by 2xAA batteries attached to the board.</li><li>A small fan tool arm, to extract soldering fumes (maybe the fan could be held up like a diamond, with two anchor points for added stability. This would need to be powered from something beefier, like a 12V power supply.</li><li>Shrink wrapping the alligator clip jaws to help prevent wear and tear to PCBs.</li><li>Attaching a <a href=\"http://www.aliexpress.com/price/baku-pcb-holder_price.html\">PCB Holder</a> to the base of the workstation.</li></ul>","url":"http://localhost:2368/a-home-made-pcb-workstation-on-a-budget/","uuid":"e4b04dcd-9169-4110-8274-57f84660103b","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d5d37cb5655c53c345c7fa2"}},{"node":{"id":"Ghost__Post__5d5d2f0d5655c53c345c7f7b","title":"Hacking A Remote Control Power Outlet","slug":"hacking-a-remote-control-power-outlet","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/finished-1.jpg","excerpt":"Messing around with 240V wiring isn't something I've ever been particularly eager to do, but I wanted a way to programmatically toggle one or more devices running on mains power.","custom_excerpt":"Messing around with 240V wiring isn't something I've ever been particularly eager to do, but I wanted a way to programmatically toggle one or more devices running on mains power.","created_at_pretty":"21 August, 2019","published_at_pretty":"01 February, 2016","updated_at_pretty":"21 August, 2019","created_at":"2019-08-21T21:46:21.000+10:00","published_at":"2016-02-01T12:16:00.000+11:00","updated_at":"2019-08-21T21:52:08.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Messing around with 240V wiring isn't something I've ever been particularly\neager to do, but I wanted a way to programmatically toggle one or more devices\nrunning on mains power.\n\nIf you've seen my 2015 Christmas Light\n[http://chrisparton.net/2016/01/17/christmas-lights-2015/] post, you may have\nnoticed that I have a bunch of traditional Christmas lights that aren't\nprogrammed in any way. I want to keep these for this year's display, but I have\nplans to make a display that synchronises to music. I want to turn the regular\nlights off when this display is active to maximise the impact.\n\nOptions...\nThere are a few ways to achieve this.\n\nPowerSwitch Tail\nPowerSwitch Tail\n[http://www.powerswitchtail.com/Pages/PowerSwitchTail240vackit.aspx] is a range\nof kits that can be put together with two ends of a mains cable of your\nchoosing. The kit has (low voltage) inputs that can be accessed by a\nmicrocontroller to effectively turn the power on and off.\n\nThe problem is, these kits are reasonably pricey and would presumably have to be\nordered in from overseas. Also, there's still a degree of danger in wiring these\nthings up.\n\nRelay\nThe cheaper option would be to simply chop a mains cable in half and stick an\nappropriately rated relay in there. This is even more dangerous, and I prefer my\nhouse when it's not on fire.\n\nRemote Control Switches\nAt the FinoComp office, we've just ordered in some components to create a neat\ncontinuous integration light based on a pedestrian crossing light. We're using\ntwo Z-Wave Switch Plugin\n[http://zwave.com.au/index.php?_a=viewProd&productId=30] units and a RaZberry\n[http://zwave.com.au/index.php?_a=viewProd&productId=97] daughterboard to\ncontrol them.\n\nThis is probably the most reliable and safe method to achieve what I want, but\nat $65 a pop for the switches and $95 for the RaZberry, it's much more costly\nthan what I want.\n\nWhat, Then?\nThere's one final option. Take a cheap, remote control power outlet and hack it\nto support input from a microcontroller. As you may have guessed, this is the\napproach I ended up taking.\n\nI bought an Arlec Remote Control Power Outlet\n[http://www.bunnings.com.au/arlec-remote-control-power-outlet-_p4331239] from\nBunnings for $13. The reason I chose this unit (apart from being cheap), is that\nit has separate \"On\" and \"Off\" buttons, which I assumed meant separate signals\nfor turning the outlet on and off. This is very important, because the\ncommunication is typically unidirectional in these things.\n\nThe outlet, complete with one unmolested controllerIf the same signal is sent to\ntoggle power and there's no way to know the state of the outlet, the state of\nthe outlet may quickly become out of sync with what my software expects. Having\nseparate signals means I can send the same signal a bunch of times to increase\nthe likelihood of it being received.\n\nI cracked open the controller to see what I was dealing with. The quality of the\ncircuit board isn't stellar, but it's good enough for my purposes. The circuit\nitself isn't too complex. Basically a bunch of buttons attached to a Holtek\nHT48R01T3 MCU [http://www.holtek.com/pdf/consumer/4xR01T3v130.pdf], which\ncontains an RF transmitter.\n\nInside the controller there are lots of buttons on a very plain PCBThe underside\nof the PCB is a little more interesting, with a microcontroller and other\ncomponentsNow, there are various blog posts around the place that detail ways to\ncapture IR signals, send them through a PC microphone jack and analyse their\nwaveforms in order to reproduce the signals.\n\nThing is, I'm too lazy to do all that if it can be avoided. I decided to simply\nrewire the \"All On\" and \"All Off\" buttons to allow me to control them from an\nArduino Due.\n\nRewiring The Controller\nI ended up adding four wires in total. Two of these wires were simply to allow\nthe remote to be powered by my Arduino Due instead of using batteries. The\nremote ran from two 1.5V LR44 batteries in series. The Arduino Due works with\n3.3V, which is close enough for me. Of course, I measured the current draw\nthrough the remote before trying this. It was only 8mA, which is a small enough\namount to run through the Arduino without blowing it up.\n\nThe other two wires were added to the positive side of the \"All On\" and \"All\nOff\" buttons, respectively. I worked out which side of the buttons were the\npositive side using the DC voltage mode on my multimeter.\n\nThese pins are connected to the Arduino, and are kept high. When one of the pins\nis brought low, the button is effectively circumvented, completing the circuit\nand allowing the signal to be sent. The nice thing about my approach is that the\nbuttons can still be used, even when the controller is connected to the Arduino.\n\nI finished the job by applying hot glue to prevent the wires from moving about\nand breaking. It's ugly, but I don't need it to be pretty for what I'm doing.\n\nA crude wired connection with some hot glue to keep the wires in placeThe Code\nI've only written a basic test program to ensure the controller can turn the\noutlet on and off. Here it is for completeness:\n\n#define ON_PIN 22\n#define OFF_PIN 23\n#define TIME_BETWEEN_POWER_TOGGLE_MS 5000\n#define MESSAGE_DURATION_MS 500\n\nvoid setup() {\n    pinMode(ON_PIN, OUTPUT);\n    digitalWrite(ON_PIN, HIGH);\n    \n    pinMode(OFF_PIN, OUTPUT);\n    digitalWrite(OFF_PIN, HIGH);\n}\n\nvoid loop() {\n  turnOn();\n  delay(TIME_BETWEEN_POWER_TOGGLE_MS);\n  turnOff();\n  delay(TIME_BETWEEN_POWER_TOGGLE_MS);\n}\n\nvoid turnOn() {\n    sendMessage(ON_PIN);\n}\n\nvoid turnOff() {\n    sendMessage(OFF_PIN);\n}\n\nvoid sendMessage(int pin) {\n  digitalWrite(pin, LOW);\n  delay(MESSAGE_DURATION_MS);\n  digitalWrite(pin, HIGH);\n}\n\n\nThe Finished Product\nHere's a video of the controller in action.","html":"<p>Messing around with 240V wiring isn't something I've ever been particularly eager to do, but I wanted a way to programmatically toggle one or more devices running on mains power.</p><p>If you've seen my <a href=\"http://chrisparton.net/2016/01/17/christmas-lights-2015/\">2015 Christmas Light</a> post, you may have noticed that I have a bunch of traditional Christmas lights that aren't programmed in any way. I want to keep these for this year's display, but I have plans to make a display that synchronises to music. I want to turn the regular lights off when this display is active to maximise the impact.</p><h2 id=\"options-\">Options...</h2><p>There are a few ways to achieve this.</p><h4 id=\"powerswitch-tail\">PowerSwitch Tail</h4><p><a href=\"http://www.powerswitchtail.com/Pages/PowerSwitchTail240vackit.aspx\">PowerSwitch Tail</a> is a range of kits that can be put together with two ends of a mains cable of your choosing. The kit has (low voltage) inputs that can be accessed by a microcontroller to effectively turn the power on and off.</p><p>The problem is, these kits are reasonably pricey and would presumably have to be ordered in from overseas. Also, there's still a degree of danger in wiring these things up.</p><h4 id=\"relay\">Relay</h4><p>The cheaper option would be to simply chop a mains cable in half and stick an appropriately rated relay in there. This is even more dangerous, and I prefer my house when it's not on fire.</p><h4 id=\"remote-control-switches\">Remote Control Switches</h4><p>At the FinoComp office, we've just ordered in some components to create a neat continuous integration light based on a pedestrian crossing light. We're using two <a href=\"http://zwave.com.au/index.php?_a=viewProd&amp;productId=30\">Z-Wave Switch Plugin</a> units and a <a href=\"http://zwave.com.au/index.php?_a=viewProd&amp;productId=97\">RaZberry</a> daughterboard to control them.</p><p>This is probably the most reliable and safe method to achieve what I want, but at $65 a pop for the switches and $95 for the RaZberry, it's much more costly than what I want.</p><h2 id=\"what-then\">What, Then?</h2><p>There's one final option. Take a cheap, remote control power outlet and hack it to support input from a microcontroller. As you may have guessed, this is the approach I ended up taking.</p><p>I bought an <a href=\"http://www.bunnings.com.au/arlec-remote-control-power-outlet-_p4331239\">Arlec Remote Control Power Outlet</a> from Bunnings for $13. The reason I chose this unit (apart from being cheap), is that it has separate \"On\" and \"Off\" buttons, which I assumed meant separate signals for turning the outlet on and off. This is very important, because the communication is typically unidirectional in these things.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-20.png\" class=\"kg-image\"><figcaption>The outlet, complete with one unmolested controller</figcaption></figure><!--kg-card-end: image--><p>If the same signal is sent to toggle power and there's no way to know the state of the outlet, the state of the outlet may quickly become out of sync with what my software expects. Having separate signals means I can send the same signal a bunch of times to increase the likelihood of it being received.</p><p>I cracked open the controller to see what I was dealing with. The quality of the circuit board isn't stellar, but it's good enough for my purposes. The circuit itself isn't too complex. Basically a bunch of buttons attached to a <a href=\"http://www.holtek.com/pdf/consumer/4xR01T3v130.pdf\">Holtek HT48R01T3 MCU</a>, which contains an RF transmitter.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-21.png\" class=\"kg-image\"><figcaption>Inside the controller there are lots of buttons on a very plain PCB</figcaption></figure><!--kg-card-end: image--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-22.png\" class=\"kg-image\"><figcaption>The underside of the PCB is a little more interesting, with a microcontroller and other components</figcaption></figure><!--kg-card-end: image--><p>Now, there are various blog posts around the place that detail ways to capture IR signals, send them through a PC microphone jack and analyse their waveforms in order to reproduce the signals.</p><p>Thing is, I'm too lazy to do all that if it can be avoided. I decided to simply rewire the \"All On\" and \"All Off\" buttons to allow me to control them from an Arduino Due.</p><h2 id=\"rewiring-the-controller\">Rewiring The Controller</h2><p>I ended up adding four wires in total. Two of these wires were simply to allow the remote to be powered by my Arduino Due instead of using batteries. The remote ran from two 1.5V LR44 batteries in series. The Arduino Due works with 3.3V, which is close enough for me. Of course, I measured the current draw through the remote before trying this. It was only 8mA, which is a small enough amount to run through the Arduino without blowing it up.</p><p>The other two wires were added to the positive side of the \"All On\" and \"All Off\" buttons, respectively. I worked out which side of the buttons were the positive side using the DC voltage mode on my multimeter.</p><p>These pins are connected to the Arduino, and are kept high. When one of the pins is brought low, the button is effectively circumvented, completing the circuit and allowing the signal to be sent. The nice thing about my approach is that the buttons can still be used, even when the controller is connected to the Arduino.</p><p>I finished the job by applying hot glue to prevent the wires from moving about and breaking. It's ugly, but I don't need it to be pretty for what I'm doing.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-23.png\" class=\"kg-image\"><figcaption>A crude wired connection with some hot glue to keep the wires in place</figcaption></figure><!--kg-card-end: image--><h2 id=\"the-code\">The Code</h2><p>I've only written a basic test program to ensure the controller can turn the outlet on and off. Here it is for completeness:</p><!--kg-card-begin: code--><pre><code class=\"language-language-cpp\">#define ON_PIN 22\n#define OFF_PIN 23\n#define TIME_BETWEEN_POWER_TOGGLE_MS 5000\n#define MESSAGE_DURATION_MS 500\n\nvoid setup() {\n    pinMode(ON_PIN, OUTPUT);\n    digitalWrite(ON_PIN, HIGH);\n    \n    pinMode(OFF_PIN, OUTPUT);\n    digitalWrite(OFF_PIN, HIGH);\n}\n\nvoid loop() {\n  turnOn();\n  delay(TIME_BETWEEN_POWER_TOGGLE_MS);\n  turnOff();\n  delay(TIME_BETWEEN_POWER_TOGGLE_MS);\n}\n\nvoid turnOn() {\n    sendMessage(ON_PIN);\n}\n\nvoid turnOff() {\n    sendMessage(OFF_PIN);\n}\n\nvoid sendMessage(int pin) {\n  digitalWrite(pin, LOW);\n  delay(MESSAGE_DURATION_MS);\n  digitalWrite(pin, HIGH);\n}\n</code></pre><!--kg-card-end: code--><h2 id=\"the-finished-product\">The Finished Product</h2><p>Here's a video of the controller in action.</p><!--kg-card-begin: html--><iframe src=\"https://www.youtube.com/embed/YIEjqCMYpUQ\" frameborder=\"0\" allowfullscreen></iframe><!--kg-card-end: html-->","url":"http://localhost:2368/hacking-a-remote-control-power-outlet/","uuid":"74c3902f-4282-4c58-a078-ba832730bd02","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d5d2f0d5655c53c345c7f7b"}},{"node":{"id":"Ghost__Post__5d5cf1135655c53c345c7f15","title":"Christmas Lights 2015: A First Attempt","slug":"christmas-lights-2015-a-first-attempt","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/xmas-lights-2015-cover.jpg","excerpt":"This is what made me want to create my own Christmas light display; I wanted to create something that would give people that same feeling.","custom_excerpt":"This is what made me want to create my own Christmas light display; I wanted to create something that would give people that same feeling.","created_at_pretty":"21 August, 2019","published_at_pretty":"16 January, 2016","updated_at_pretty":"21 August, 2019","created_at":"2019-08-21T17:21:55.000+10:00","published_at":"2016-01-17T09:28:00.000+11:00","updated_at":"2019-08-21T21:53:34.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"christmas lights","slug":"christmas-lights","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"christmas lights","slug":"christmas-lights","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"raspberry pi","slug":"raspberry-pi","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"software","slug":"software","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"I've always liked Christmas lights, but my house rarely saw itself decorated\nbeyond the bare minimum of the Christmas tree during the festive season. Maybe a\nfew silver baubles and a star on the tree, but never more than that.\n\nIn December 2014, my girlfriend and I went Christmas light hunting and wound up\nat Edgewood Estate [http://jamiespages.net/photo-galleries/715-2/], where\neverybody seems to get into the spirit of Christmas. At the top of the estate,\nalmost every single home was adorned with beautiful lights.\n\nWhat struck me about this place was the atmosphere. So many families were out\nenjoying the lights with their children, and everybody was some combination of\nhappy, excited and awestruck.\n\nThis is what made me want to create my own Christmas light display; I wanted to\ncreate something that would give people that same feeling. I also wanted to\ncreate something different, using my skills as a software engineer and, more\nrecently, as an electronics hobbyist.\n\nThe Lights\nHere is my first Christmas light attempt (Apologies for the poor audio... and\nvideo... and random talking towards the end):\n\nI was planning on blogging about the process I went through to build my lights,\nbut the reality is that I did it all in less than a month, learning as I went.\nThe result of such rushed work was a functional but hacky piece of work. As\nsuch, I'll stick to describing the project at a higher level.\n\nFeatures\nThe Raspberry Pi controls the lights wrapped around each pillar of the house.\nThe other lights are not interactive in any way and have nothing to do with the\nPi.\n\nThere are three main features to the pillars:\n\n 1. Instrument playing\n 2. Song playing\n 3. \"Screensaver\" effects\n\nThe first two features are interactive, which isn't something I've seen a lot\nof, even in online videos. There are plenty of insane Christmas light displays (\nExhibit A [https://www.youtube.com/watch?v=8zyoMQ4Khts], Exhibit B\n[https://www.youtube.com/watch?v=90oZ52M4IC0], Exhibit C\n[https://www.youtube.com/watch?v=mejJRgHpdyE]), but for the most part they lack\nthe ability to be influenced by spectators.\n\nInstrument and Song Playing\nThe interactive elements of my Christmas lights are controlled by a little\nbutton box I made by etching my own PCB and mounting it in a box:\n\nButton boxThe coloured buttons are used to control the four house pillars. When\na button is pressed, the corresponding pillar lights up and a musical sound is\nplayed. The pitch of the instrument increases from left to right. The white\nbutton changes the instrument between piano and violin.\n\nThe black button plays the chorus of one of four Christmas songs, and\nilluminates the pillars in sync with the music. This required using Audacity to\nfind the timings of the notes, and mapping the notes to sheet music found\nonline.\n\nThe screensaver effect is simply a series of alternating patters that are\nilluminated on the pillars when a button hasn't been pressed for a while.\n\nHow It Works\nThe Christmas lights on the four pillars are regular solar-powered LED strings.\nI cut the wires between the solar panel and the lights, and essentially ran each\nset of lights through a transistor. The transistors were then controlled using\nthe GPIO pins on a Raspberry Pi using Pi4J [http://pi4j.com/]:\n\nButtons and lights wired up to a Raspberry PiWhat's Next?\nI've already started working on my Christmas lights for 2016, and I plan to keep\nthe blog updated as I progress. So, stay tuned!","html":"<p>I've always liked Christmas lights, but my house rarely saw itself decorated beyond the bare minimum of the Christmas tree during the festive season. Maybe a few silver baubles and a star on the tree, but never more than that.</p><p>In December 2014, my girlfriend and I went Christmas light hunting and wound up at <a href=\"http://jamiespages.net/photo-galleries/715-2/\">Edgewood Estate</a>, where everybody seems to get into the spirit of Christmas. At the top of the estate, almost every single home was adorned with beautiful lights.</p><p>What struck me about this place was the atmosphere. So many families were out enjoying the lights with their children, and everybody was some combination of happy, excited and awestruck.</p><p>This is what made me want to create my own Christmas light display; I wanted to create something that would give people that same feeling. I also wanted to create something different, using my skills as a software engineer and, more recently, as an electronics hobbyist.</p><h2 id=\"the-lights\">The Lights</h2><p>Here is my first Christmas light attempt (Apologies for the poor audio... and video... and random talking towards the end):</p><!--kg-card-begin: html-->  <iframe src=\"https://www.youtube.com/embed/YddNPKLF7d0\" frameborder=\"0\" allowfullscreen></iframe><!--kg-card-end: html--><p>I was planning on blogging about the process I went through to build my lights, but the reality is that I did it all in less than a month, learning as I went. The result of such rushed work was a functional but hacky piece of work. As such, I'll stick to describing the project at a higher level.</p><h2 id=\"features\">Features</h2><p>The Raspberry Pi controls the lights wrapped around each pillar of the house. The other lights are not interactive in any way and have nothing to do with the Pi.</p><p>There are three main features to the pillars:</p><ol><li>Instrument playing</li><li>Song playing</li><li>\"Screensaver\" effects</li></ol><p>The first two features are interactive, which isn't something I've seen a lot of, even in online videos. There are plenty of insane Christmas light displays (<a href=\"https://www.youtube.com/watch?v=8zyoMQ4Khts\">Exhibit A</a>, <a href=\"https://www.youtube.com/watch?v=90oZ52M4IC0\">Exhibit B</a>, <a href=\"https://www.youtube.com/watch?v=mejJRgHpdyE\">Exhibit C</a>), but for the most part they lack the ability to be influenced by spectators.</p><h4 id=\"instrument-and-song-playing\">Instrument and Song Playing</h4><p>The interactive elements of my Christmas lights are controlled by a little button box I made by etching my own PCB and mounting it in a box:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-13.png\" class=\"kg-image\"><figcaption>Button box</figcaption></figure><!--kg-card-end: image--><p>The coloured buttons are used to control the four house pillars. When a button is pressed, the corresponding pillar lights up and a musical sound is played. The pitch of the instrument increases from left to right. The white button changes the instrument between piano and violin.</p><p>The black button plays the chorus of one of four Christmas songs, and illuminates the pillars in sync with the music. This required using Audacity to find the timings of the notes, and mapping the notes to sheet music found online.</p><p>The screensaver effect is simply a series of alternating patters that are illuminated on the pillars when a button hasn't been pressed for a while.</p><h2 id=\"how-it-works\">How It Works</h2><p>The Christmas lights on the four pillars are regular solar-powered LED strings. I cut the wires between the solar panel and the lights, and essentially ran each set of lights through a transistor. The transistors were then controlled using the GPIO pins on a Raspberry Pi using <a href=\"http://pi4j.com/\">Pi4J</a>:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-14.png\" class=\"kg-image\"><figcaption>Buttons and lights wired up to a Raspberry Pi</figcaption></figure><!--kg-card-end: image--><h2 id=\"what-s-next\">What's Next?</h2><p>I've already started working on my Christmas lights for 2016, and I plan to keep the blog updated as I progress. So, stay tuned!</p>","url":"http://localhost:2368/christmas-lights-2015-a-first-attempt/","uuid":"2aac46b1-1fc1-4944-9443-d84306049c3c","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d5cf1135655c53c345c7f15"}},{"node":{"id":"Ghost__Post__5d5cef175655c53c345c7ed1","title":"Got Parts?","slug":"got-parts","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/parts.jpg","excerpt":"Today was a good day. I've been ordering electronic components on eBay like crazy over the past few weeks, many of them from China. Today, the first of these arrived.","custom_excerpt":"Today was a good day. I've been ordering electronic components on eBay like crazy over the past few weeks, many of them from China. Today, the first of these arrived.","created_at_pretty":"21 August, 2019","published_at_pretty":"07 October, 2015","updated_at_pretty":"21 August, 2019","created_at":"2019-08-21T17:13:27.000+10:00","published_at":"2015-10-08T09:44:00.000+11:00","updated_at":"2019-08-21T20:55:56.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Today was a good day. I've been ordering electronic components on eBay like\ncrazy over the past few weeks, many of them from China. Today, the first of\nthese arrived.\n\nIt's amazing how cheap these parts are. Half of me is saying \"these parts must\nbe rubbish, they'll all die on you the moment you touch them\", and the more\noptimistic side of me is saying that China simply has vast economies of scale,\nwhich drives down the price of mass produced components such as these.\n\nI don't know how to use many of the components I've bought yet, but I plan to\nshortly, and I'll be providing updates on the quality of the components as I use\nthem.\n\nThe rest of this article is devoted to the (interesting) parts that arrived,\nwhat they do, and how cheap they are compared to Australian prices. I'm going to\nuse Jaycar for Australian pricing comparisons, as that's my go to place when I\nneed something quickly.\n\n\n--------------------------------------------------------------------------------\n\nArduino Pro Minis\nArduino Pro MiniThese little guys are a smaller version of the Arduino Uno,\nwhich is what I am using (a variant of one, anyway). Like their big brother, the \nArduino Pro Mini [https://www.arduino.cc/en/Main/ArduinoBoardProMini] boards\nsport an ATmega328 microcontroller. Despite their diminutive dimensions, they\npack 14 digital pins, 6 of which can be used for PWM.\n\nCaveats\nIt's worth noting that neither of these are not official Arduino boards, they're\nboth clones. It's also worth noting that the Australian version linked above has\nthe header pins soldered on, whereas the Chinese board ships with detached\nheader pins. The Chinese versions also need to be programmed with a UART,\nwhereas the Australian one has a micro USB port built in.\n\nVerdict\nCountry Price (Incl. Shipping) Australia\n[http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Science-Lab-Equipment/Glassware/DuinoTECH-Nano/p/XC4414] \n $29.95 China [https://www.ebay.com.au/itm/311437193162] $2.05 14.6 times\ncheaper from China, but less user friendly that the Australian counterpart. \n--------------------------------------------------------------------------------\n\nUSB 2.0 UARTs (CP2102)\nUSB 2.0 UART (CP2102)As mentioned above, the Chinese Arduino Minis don't have a\nUSB port built in. A UART has to be used to transfer software to the Arduino.\n\nCountry Price (Incl. Shipping) Australia\n[http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Science-Lab-Equipment/Glassware/Arduino-Compatible-USB-to-Serial-Adaptor-Module/p/XC4464] \n $17.95 China [https://www.ebay.com.au/itm/400565980256] $2.01 8.9 times cheaper\nfrom China, but the Australian model has mini USB. \n--------------------------------------------------------------------------------\n\nAccelerometer Modules (MPU-6050)\nMPU-6050 accelerometer moduleThese accelerometers work in three dimensions, and\nare surprisingly cheap in Australia. As seems to be a common theme here, the\nAustralian module has its pins pre-soldered, the Chinese module does not.\n\nCountry Price (Incl. Shipping) Australia\n[http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Electronic-Project-Kits/Computer-%26-Programming/3-Axis-Accelerometer-Module-for-Arduino/p/XC4478] \n $7.95 China [https://www.ebay.com.au/itm/201002005334] $2.88 2.8 times cheaper\nfrom China, but with detached header pins. \n--------------------------------------------------------------------------------\n\nJoysticks\nJoystick moduleThese joysticks support your typical up/down/left/right\ndirectional input, but can also be pushed in like a button, neat!\n\nCountry Price (Incl. Shipping) Australia\n[http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Science-Lab-Equipment/Specialty-Equipment/Arduino-Compatible-X-and-Y-Axis-Joystick-Module/p/XC4422] \n $4.95 China [https://www.ebay.com.au/itm/311154090095] $1.80 2.8 times cheaper\nfrom China, no apparent differences at first glance. \n--------------------------------------------------------------------------------\n\nBluetooth Transceivers\nBluetooth transceiver\nI was amazed to discover how cheap these things were, I was expecting to fork\nout $40+ for something like this. We live in an amazing time where awesome\ntechnologies are readily available to the masses.\n\nCountry Price (Incl. Shipping) Australia\n[http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Science-Lab-Equipment/Instruments/Arduino-Compatible-Bluetooth-Wireless-Module/p/XC4510] \n $19.95 China [https://www.ebay.com.au/itm/200924726178] $5.40 3.7 times cheaper\nfrom China, no apparent differences at first glance. \n--------------------------------------------------------------------------------\n\nTime To Experiment\nAnyway, just wanted to record some of the cool stuff I'm getting. I'm really\nlooking forward to figuring out how to use all of these parts and make something\ncool with them! I still have loads of other parts on the way too, exciting times\nahead!","html":"<p>Today was a good day. I've been ordering electronic components on eBay like crazy over the past few weeks, many of them from China. Today, the first of these arrived.</p><p>It's amazing how cheap these parts are. Half of me is saying \"these parts must be rubbish, they'll all die on you the moment you touch them\", and the more optimistic side of me is saying that China simply has vast economies of scale, which drives down the price of mass produced components such as these.</p><p>I don't know how to use many of the components I've bought yet, but I plan to shortly, and I'll be providing updates on the quality of the components as I use them.</p><p>The rest of this article is devoted to the (interesting) parts that arrived, what they do, and how cheap they are compared to Australian prices. I'm going to use Jaycar for Australian pricing comparisons, as that's my go to place when I need something quickly.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h3 id=\"arduino-pro-minis\">Arduino Pro Minis</h3><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-8.png\" class=\"kg-image\"><figcaption>Arduino Pro Mini</figcaption></figure><!--kg-card-end: image--><p>These little guys are a smaller version of the Arduino Uno, which is what I am using (a variant of one, anyway). Like their big brother, the <a href=\"https://www.arduino.cc/en/Main/ArduinoBoardProMini\">Arduino Pro Mini</a> boards sport an ATmega328 microcontroller. Despite their diminutive dimensions, they pack 14 digital pins, 6 of which can be used for PWM.</p><h4 id=\"caveats\">Caveats</h4><p>It's worth noting that neither of these are not official Arduino boards, they're both clones. It's also worth noting that the Australian version linked above has the header pins soldered on, whereas the Chinese board ships with detached header pins. The Chinese versions also need to be programmed with a UART, whereas the Australian one has a micro USB port built in.</p><h3 id=\"verdict\">Verdict</h3><!--kg-card-begin: html--><table>  \n  <tbody><tr>\n    <th>Country</th>\n    <th>Price (Incl. Shipping)</th>\n  </tr>\n  <tr>\n    <td>\n<a href=\"http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Science-Lab-Equipment/Glassware/DuinoTECH-Nano/p/XC4414\">Australia</a>  \n    </td>\n    <td>$29.95</td>\n  </tr>\n  <tr>\n    <td>\n<a href=\"https://www.ebay.com.au/itm/311437193162\">China</a>  \n    </td>\n    <td>$2.05</td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">\n      <b>14.6</b> times cheaper from China, but less user friendly that the Australian counterpart.\n    </td>\n  </tr>\n</tbody></table><!--kg-card-end: html--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h3 id=\"usb-2-0-uarts-cp2102-\">USB 2.0 UARTs (CP2102)</h3><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-9.png\" class=\"kg-image\"><figcaption>USB 2.0 UART (CP2102)</figcaption></figure><!--kg-card-end: image--><p>As mentioned above, the Chinese Arduino Minis don't have a USB port built in. A UART has to be used to transfer software to the Arduino.</p><!--kg-card-begin: html--><table>  \n  <tbody><tr>\n    <th>Country</th>\n    <th>Price (Incl. Shipping)</th>\n  </tr>\n  <tr>\n    <td>\n<a href=\"http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Science-Lab-Equipment/Glassware/Arduino-Compatible-USB-to-Serial-Adaptor-Module/p/XC4464\">Australia</a>  \n    </td>\n    <td>$17.95</td>\n  </tr>\n  <tr>\n    <td>\n<a href=\"https://www.ebay.com.au/itm/400565980256\">China</a>  \n    </td>\n    <td>$2.01</td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">\n      <b>8.9</b> times cheaper from China, but the Australian model has mini USB.\n    </td>\n  </tr>\n</tbody></table><!--kg-card-end: html--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h3 id=\"accelerometer-modules-mpu-6050-\">Accelerometer Modules (MPU-6050)</h3><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-10.png\" class=\"kg-image\"><figcaption>MPU-6050 accelerometer module</figcaption></figure><!--kg-card-end: image--><p>These accelerometers work in three dimensions, and are surprisingly cheap in Australia. As seems to be a common theme here, the Australian module has its pins pre-soldered, the Chinese module does not.</p><!--kg-card-begin: html--><table>  \n  <tbody><tr>\n    <th>Country</th>\n    <th>Price (Incl. Shipping)</th>\n  </tr>\n  <tr>\n    <td>\n<a href=\"http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Electronic-Project-Kits/Computer-%26-Programming/3-Axis-Accelerometer-Module-for-Arduino/p/XC4478\">Australia</a>  \n    </td>\n    <td>$7.95</td>\n  </tr>\n  <tr>\n    <td>\n<a href=\"https://www.ebay.com.au/itm/201002005334\">China</a>  \n    </td>\n    <td>$2.88</td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">\n      <b>2.8</b> times cheaper from China, but with detached header pins.\n    </td>\n  </tr>\n</tbody></table><!--kg-card-end: html--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h3 id=\"joysticks\">Joysticks</h3><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-11.png\" class=\"kg-image\"><figcaption>Joystick module</figcaption></figure><!--kg-card-end: image--><p>These joysticks support your typical up/down/left/right directional input, but can also be pushed in like a button, neat!</p><!--kg-card-begin: html--><table>  \n  <tbody><tr>\n    <th>Country</th>\n    <th>Price (Incl. Shipping)</th>\n  </tr>\n  <tr>\n    <td>\n<a href=\"http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Science-Lab-Equipment/Specialty-Equipment/Arduino-Compatible-X-and-Y-Axis-Joystick-Module/p/XC4422\">Australia</a>  \n    </td>\n    <td>$4.95</td>\n  </tr>\n  <tr>\n    <td>\n<a href=\"https://www.ebay.com.au/itm/311154090095\">China</a>  \n    </td>\n    <td>$1.80</td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">\n      <b>2.8</b> times cheaper from China, no apparent differences at first glance.\n    </td>\n  </tr>\n</tbody></table><!--kg-card-end: html--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h3 id=\"bluetooth-transceivers\">Bluetooth Transceivers</h3><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-12.png\" class=\"kg-image\"><figcaption>Bluetooth transceiver</figcaption></figure><!--kg-card-end: image--><p><br>I was amazed to discover how cheap these things were, I was expecting to fork out $40+ for something like this. We live in an amazing time where awesome technologies are readily available to the masses.</p><!--kg-card-begin: html--><table>  \n  <tbody><tr>\n    <th>Country</th>\n    <th>Price (Incl. Shipping)</th>\n  </tr>\n  <tr>\n    <td>\n<a href=\"http://www.jaycar.com.au/Kits%2C-Science-%26-Learning/Science-Lab-Equipment/Instruments/Arduino-Compatible-Bluetooth-Wireless-Module/p/XC4510\">Australia</a>  \n    </td>\n    <td>$19.95</td>\n  </tr>\n  <tr>\n    <td>\n<a href=\"https://www.ebay.com.au/itm/200924726178\">China</a>  \n    </td>\n    <td>$5.40</td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">\n      <b>3.7</b> times cheaper from China, no apparent differences at first glance.\n    </td>\n  </tr>\n</tbody></table><!--kg-card-end: html--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h2 id=\"time-to-experiment\">Time To Experiment</h2><p>Anyway, just wanted to record some of the cool stuff I'm getting. I'm really looking forward to figuring out how to use all of these parts and make something cool with them! I still have loads of other parts on the way too, exciting times ahead!</p>","url":"http://localhost:2368/got-parts/","uuid":"f843a28c-3256-4f3e-9194-2d15b02c6ec6","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d5cef175655c53c345c7ed1"}},{"node":{"id":"Ghost__Post__5d5cecc95655c53c345c7e9c","title":"Working With An 8x8 LED Matrix","slug":"working-with-an-8x8-led-matrix","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/01.jpg","excerpt":"Having nearly completed the Sparkfun Inventor's Kit guidebook, I went on a purchasing frenzy, acquiring loads of various electronic components online.\n\nAmongst these was a Dual Colour 8x8 LED Matrix.","custom_excerpt":"Having nearly completed the Sparkfun Inventor's Kit guidebook, I went on a purchasing frenzy, acquiring loads of various electronic components online.\n\nAmongst these was a Dual Colour 8x8 LED Matrix.","created_at_pretty":"21 August, 2019","published_at_pretty":"05 October, 2015","updated_at_pretty":"21 August, 2019","created_at":"2019-08-21T17:03:37.000+10:00","published_at":"2015-10-05T11:46:00.000+11:00","updated_at":"2019-08-21T20:55:01.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"arduino","slug":"arduino","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"led","slug":"led","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Having nearly completed the Sparkfun Inventor's Kit guidebook, I went on a\npurchasing frenzy, acquiring loads of various electronic components online.\n\nAmongst these was a Dual Colour 8x8 LED Matrix\n[https://littlebirdelectronics.com.au/products/led-matrix-dual-color-small]. I\nchose to work with this first because it looked like something I could tackle\nwith difficulty, which I believe is conducive to Flow\n[https://en.wikipedia.org/wiki/Flow_(psychology)]. The fact that this was the\nfirst item to arrive in the mail also played a part in my decision.\n\nI set out with a goal to make a scrolling message panel, albeit a small one. I'm\npleased to say that I was able to achieve this, and I learned a lot along the\nway. I hope that by recording my projects in this blog that I'll further\nsolidify my understanding of electrical theory.\n\nThe end result is this:\n\nStep 1: What Are All These Pins For?\nThe Datasheet\n[https://cdn.sparkfun.com/datasheets/Components/LED/YSM-1288CR3G2C2.pdf] for my\nLED matrix wasn't exactly clear to me the first time I read it. The pinout\nleaves a lot to be desired as far as clarity goes:\n\nLED matrix wiring diagramSo the pinout tells us a few things:\n\n 1. There are 24 pins in total (8 red anodes, 8 green anodes, 8 common cathodes)\n 2. The pins are in a crazy order.\n\nWhat the pinout doesn't tell us, is the physical location of the pins on the\nmatrix. The matrix is perfectly square, with no indicator of which pin is pin 1.\nSo, I had to deduce that through trial and error. I wired up all of the pins,\nthen tested pins until I found the anode and cathode for a corner LED:\n\nThe LED matrix connected to a breadboardSo, we now know that two consecutive\npins can be used to power a corner LED. Given the assumption that the pins are\nordered sequentially on the LED matrix, those pins can only be the following:\n\n * Pins 2 and 3\n * Pins 10 and 11\n * Pins 14 and 15\n * Pins 22 and 23\n\nBy process of elimination, it turns out that none of the options are possible.\nThe most correct option on that list is that the circuit is using pins 22 and\n23. The only incorrect part is that the pinout states that pin 23 is connected\nto the anode for a green LED. It turns out that the datasheet is incorrect, the\nblack anodes actually depict red LEDs (lesson learned: never take a datasheet\nfor gospel).\n\nArmed with this knowledge, it was possible to figure out what all of the other\npins are for. The image below is using the same orientation as the image\nprevious image:\n\nPin diagram for the LED matrixStep 2: Wiring Up\nNow that we know what on earth the pins are for, this step is pretty easy, if\nnot a bit tedious. Since I'm using the Sparkfun Redboard\n[https://www.sparkfun.com/products/12757] (equivalent to the Arduino Uno), I\nonly have 13 digital out pins. Obviously, this isn't enough to accommodate all\nof the pins on the matrix.\n\nI decided to compromise and only use the red LEDs, which means I still need 16\npins. Fortunately, the analog in pins can also be used as digital output pins,\nso the final wiring looks like this:\n\nAs a convention, I used red and orange cables to connect to the red LED anodes,\nand green and blue cables to connect to the common cathodes. I placed 330Ω\nresistors in series with each anode connection (more on that later). The\nconnections are as follows:\n\nArduino Pin Matrix Pin Pin Type 2 11 Red Anode 3 8 Red Anode 4 5 Red Anode 5 2 \nRed Anode 6 14 Red Anode 7 17 Red Anode 8 20 Red Anode 9 23 Red Anode 11 13 \nCommon Cathode 12 10 Common Cathode A0 6 Common Cathode A1 3 Common Cathode A2 \n13 Common Cathode A3 16 Common Cathode A4 19 Common Cathode A5 22 Common Cathode \nStep 3: Making It Do Stuff\nOne hard truth I was hit with pretty early on is that making a legible picture\nshow up on this thing wasn't going to be as simple as I had hoped.\n\nThere are 16 pins wired up, each with two possible states: On or Off. This\nequates to 216 possible voltage states that the pins can be in. However, there\nare 64 LEDs wired up (disregarding the green LEDs), which equates to 264 \npossible LED states. This means that it's impossible to make any pattern of LEDs\nlight up at a given time (it's a violation of the Pigeonhole Principle\n[https://en.wikipedia.org/wiki/Pigeonhole_principle]).\n\nMy plan instead, then, was to only ever display one pixel at a time. That might\nsound like a pretty silly way to make an image scroller, but this actually isn't\ntoo dissimilar to the way old-fashioned CRT monitors work.\n\nBy turning single LEDs on for fractions of a second and repeating, we can trick\nthe human eye into perceiving a still image. By feeding multiple images into\nthis process, we can make it look like an image is moving.\n\nThe other advantage of this approach is that current will only be drawn for 0 or\n1 LED at any given instance. This means that standard resistors can be used. If\nwe were lighting up multiple pixels in a given column at the same time, a more\nsophisticated method would have to be used (and with my current skillset, I\ndon't know what that would be).\n\nStep 4: The Code\nI've included comments in the code below to act as an explanation:\n\n// The number of LEDs in the matrix in one dimension.\n#define LED_MATRIX_SIZE 8\n\n// The width of each letter when displayed on the matrix, including one column for\n// spacing between letters.\n#define LETTER_WIDTH 6\n#define REPAINT_COUNT 50\n\n// Red pins, in left-to-right order.\n// Physical pin attachments to LED matrix: 11, 8, 5, 2, 14, 17, 20, 23.\nconst byte RED_PINS[LED_MATRIX_SIZE] = {2, 3, 4, 5, 6, 7, 8, 9};\n\n// Ground pins, in top-to-bottom order (skip pin 13 to avoid using the integrated LED).\n// Physical pin attachments to LED matrix: 22, 19, 16, 13, 3, 6, 9, 12.\nconst byte GROUND_PINS[LED_MATRIX_SIZE] = {A5, A4, A3, A2, A1, A0, 12, 11};\n\n/* Binary representation of each letter, where 1 indicates an \"On\" pixel and 0 indicates\n * \"Off\", e.g. the letter \"A\" is defined as 0b0111010001111111000110001. Split into 5\n * rows and columns, that binary value looks like:\n * 0 1 1 1 0\n * 1 0 0 0 1\n * 1 1 1 1 1\n * 1 0 0 0 1\n * 1 0 0 0 1\n * \n * Notice that the \"1\" pixels form a pixel representation of the letter \"A\". The same holds\n * true for the other letters defined below.\n */\nconst long LETTERS[] = {\n  0b0111010001111111000110001, // 'A'\n  0b1111010001111101000111110, // 'B'\n  0b0111010001100001000101110, // 'C'\n  0b1111010001100011000111110, // 'D'\n  0b1111110000111101000011111, // 'E'\n  0b1111110000111101000010000, // 'F'\n  0b0111010000101111001001110, // 'G'\n  0b1000110001111111000110001, // 'H'\n  0b1111100100001000010011111, // 'I'\n  0b0011100010000101001001100, // 'J'\n  0b1000110010111001001010001, // 'K'\n  0b1000010000100001000011111, // 'L'\n  0b0101010101101011000110001, // 'M'\n  0b1000111001101011001110001, // 'N'\n  0b0111010001100011000101110, // 'O'\n  0b1111010001111101000010000, // 'P'\n  0b0110010010101101001001101, // 'Q'\n  0b1111010001111101001010001, // 'R'\n  0b0111110000011100000111110, // 'S'\n  0b1111100100001000010000100, // 'T'\n  0b1000110001100011000101110, // 'U'\n  0b1000110001100010101000100, // 'V'\n  0b1000110001101011101110001, // 'W'\n  0b1000101010001000101010001, // 'X'\n  0b1000101010001000010000100, // 'Y'\n  0b1111100010001000100011111  // 'Z'\n};\n\n// Set all pins to output, so we can change the potential difference between\n// positive and negative pins. We also default the cathode pins to HIGH, which creates\n// a negative potential difference that results in no LEDs turning on.\nvoid setup() {\n  for (byte i = 0; i < LED_MATRIX_SIZE; ++i) {\n    byte anodePin = RED_PINS[i];\n    pinMode(anodePin, OUTPUT);\n    \n    byte groundPin = GROUND_PINS[i];\n    pinMode(groundPin, OUTPUT);\n\n    digitalWrite(GROUND_PINS[i], HIGH);\n  }\n}\n\nvoid loop() {\n  renderMessage();\n}\n\nvoid renderMessage() {\n  // The message to display on the screen, with some space for padding\n  // when displaying the message.\n  char message[] = \" I AM ALIVE \";\n\n  int messageIndex = 0;\n  char messageChar = message[messageIndex];\n\n  while (messageChar != '\\0') {\n    char nextChar = message[messageIndex + 1];\n    if (nextChar == '\\0') {\n      nextChar = ' ';\n    }\n\n    renderFrame(messageChar, nextChar);\n\n    ++messageIndex;\n    messageChar = message[messageIndex]; \n  }\n}\n\n// 2 characters are always present on the screen. This function handles the drawing of those two\n// characters in such a way that they scroll off the screen to the left. As soon as the first\n// character is invisible, the function exits and is called again with a new secondChar,\n// while the previous secondChar is passed in as the new firstChar.\nvoid renderFrame(char firstChar, char secondChar) {\n  for (byte i = 0; i < LETTER_WIDTH; ++i) {\n    for (byte j = 0; j < REPAINT_COUNT; ++j) {\n      boolean frame[LED_MATRIX_SIZE][LED_MATRIX_SIZE] = {};\n      \n      renderCharacter(frame, firstChar, -i);\n      renderCharacter(frame, secondChar, 6 - i);\n\n      renderFrame(frame);\n      delay(1);\n    }\n  }\n}\n\n// Draws a pixel representation of a single letter to the frame buffer.\nvoid renderCharacter(boolean frame[LED_MATRIX_SIZE][LED_MATRIX_SIZE], char character, int offset) {\n  for (int row = 0; row < 5; ++row) {\n    for (int col = 0; col < 5; ++col) {\n      int bitCount = (row * 5) + col;\n\n      long displayCharacter;\n      if (character == ' ') {\n        displayCharacter = 0; // All spaces.\n      } else {\n        displayCharacter = LETTERS[character - 'A'];\n      }\n\n      // This is where the magic happens. The left shift and binary AND operations are used\n      // together to effectively iterate over each bit of the character as defined in the\n      // LETTERS array. This results in a 1 or 0, which is used to dictate whether a pixel\n      // should be turned on or off for a given point.\n      boolean isOn = displayCharacter & (1L << (24 - bitCount));\n\n      // Only render the visible parts of the letter (part of the letter is likely to have\n      // scrolled off the screen.\n      int offsetCol = col + offset;\n      if (offsetCol >= 0 && offsetCol < LED_MATRIX_SIZE) {\n        frame[row][offsetCol] = isOn;\n      }\n    }\n  }\n}\n\n// Converts the in-memory frame buffer into an actual image. This is achieved by rapidly\n// turning on single LEDs that correspond to \"true\" values in the frame buffer, then turning\n// them off after a short delay.\n// A single pixel is turned on by bringing the anode pin HIGH and the corresponding cathode pin\n// LOW. Remember that all cathodes were brought HIGH earlier in the setup() function.\nvoid renderFrame(boolean frame[LED_MATRIX_SIZE][LED_MATRIX_SIZE]) {\n  for (byte row = 0; row < LED_MATRIX_SIZE; ++row) {\n    for (byte col = 0; col < LED_MATRIX_SIZE; ++col) {\n        // Turn pixel on or off as required.\n        digitalWrite(RED_PINS[row], frame[row][col]);\n        digitalWrite(GROUND_PINS[col], !frame[row][col]);\n\n        // Turn pixel back off.\n        digitalWrite(RED_PINS[row], LOW);\n        digitalWrite(GROUND_PINS[col], HIGH);\n    }\n  }\n}\n\n\nThat's All There Is To It\nIf you've made it to the end of this article, thanks for your patience. This is\nmy first blog post of substance, and I'd love to hear any feedback or\nconstructive criticism in the comments section below. Cheers!","html":"<p>Having nearly completed the Sparkfun Inventor's Kit guidebook, I went on a purchasing frenzy, acquiring loads of various electronic components online.</p><p>Amongst these was a <a href=\"https://littlebirdelectronics.com.au/products/led-matrix-dual-color-small\">Dual Colour 8x8 LED Matrix</a>. I chose to work with this first because it looked like something I could tackle with difficulty, which I believe is conducive to <a href=\"https://en.wikipedia.org/wiki/Flow_(psychology)\">Flow</a>. The fact that this was the first item to arrive in the mail also played a part in my decision.</p><p>I set out with a goal to make a scrolling message panel, albeit a small one. I'm pleased to say that I was able to achieve this, and I learned a lot along the way. I hope that by recording my projects in this blog that I'll further solidify my understanding of electrical theory.</p><p>The end result is this:</p><h2 id=\"step-1-what-are-all-these-pins-for\">Step 1: What Are All These Pins For?</h2><p>The <a href=\"https://cdn.sparkfun.com/datasheets/Components/LED/YSM-1288CR3G2C2.pdf\">Datasheet</a> for my LED matrix wasn't exactly clear to me the first time I read it. The pinout leaves a lot to be desired as far as clarity goes:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image.png\" class=\"kg-image\"><figcaption>LED matrix wiring diagram</figcaption></figure><!--kg-card-end: image--><p>So the pinout tells us a few things:</p><ol><li>There are 24 pins in total (8 red anodes, 8 green anodes, 8 common cathodes)</li><li>The pins are in a crazy order.</li></ol><p>What the pinout <em>doesn't</em> tell us, is the physical location of the pins on the matrix. The matrix is perfectly square, with no indicator of which pin is pin 1. So, I had to deduce that through trial and error. I wired up all of the pins, then tested pins until I found the anode and cathode for a corner LED:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-1.png\" class=\"kg-image\"><figcaption>The LED matrix connected to a breadboard</figcaption></figure><!--kg-card-end: image--><p>So, we now know that two consecutive pins can be used to power a corner LED. Given the assumption that the pins are ordered sequentially on the LED matrix, those pins can only be the following:</p><ul><li>Pins 2 and 3</li><li>Pins 10 and 11</li><li>Pins 14 and 15</li><li>Pins 22 and 23</li></ul><p>By process of elimination, it turns out that none of the options are possible. The most correct option on that list is that the circuit is using pins 22 and 23. The only incorrect part is that the pinout states that pin 23 is connected to the anode for a <em>green</em> LED. It turns out that the datasheet is incorrect, the black anodes actually depict <em>red</em> LEDs (lesson learned: never take a datasheet for gospel).</p><p>Armed with this knowledge, it was possible to figure out what all of the other pins are for. The image below is using the same orientation as the image previous image:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-width-full kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2019/08/image-2.png\" class=\"kg-image\"><figcaption>Pin diagram for the LED matrix</figcaption></figure><!--kg-card-end: image--><h2 id=\"step-2-wiring-up\">Step 2: Wiring Up</h2><p>Now that we know what on earth the pins are for, this step is pretty easy, if not a bit tedious. Since I'm using the <a href=\"https://www.sparkfun.com/products/12757\">Sparkfun Redboard</a> (equivalent to the Arduino Uno), I only have 13 digital out pins. Obviously, this isn't enough to accommodate all of the pins on the matrix.</p><p>I decided to compromise and only use the red LEDs, which means I still need 16 pins. Fortunately, the analog in pins can also be used as digital output pins, so the final wiring looks like this:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2019/08/image-3.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>As a convention, I used red and orange cables to connect to the red LED anodes, and green and blue cables to connect to the common cathodes. I placed 330Ω resistors in series with each anode connection (more on that later). The connections are as follows:</p><!--kg-card-begin: html--><table style=\"table-layout: fixed ; width: auto\">  \n  <tbody><tr>\n    <th>Arduino Pin</th>\n    <th>Matrix Pin</th>\n    <th>Pin Type</th>\n  </tr>\n  <tr>\n    <td>2</td>\n    <td>11</td>\n    <td>Red Anode</td>\n  </tr>\n  <tr>\n    <td>3</td>\n    <td>8</td>\n    <td>Red Anode</td>\n  </tr>\n  <tr>\n    <td>4</td>\n    <td>5</td>\n    <td>Red Anode</td>\n  </tr>\n  <tr>\n    <td>5</td>\n    <td>2</td>\n    <td>Red Anode</td>\n  </tr>\n  <tr>\n    <td>6</td>\n    <td>14</td>\n    <td>Red Anode</td>\n  </tr>\n  <tr>\n    <td>7</td>\n    <td>17</td>\n    <td>Red Anode</td>\n  </tr>\n  <tr>\n    <td>8</td>\n    <td>20</td>\n    <td>Red Anode</td>\n  </tr>\n  <tr>\n    <td>9</td>\n    <td>23</td>\n    <td>Red Anode</td>\n  </tr>\n  <tr>\n    <td>11</td>\n    <td>13</td>\n    <td>Common Cathode</td>\n  </tr>\n  <tr>\n    <td>12</td>\n    <td>10</td>\n    <td>Common Cathode</td>\n  </tr>\n  <tr>\n    <td>A0</td>\n    <td>6</td>\n    <td>Common Cathode</td>\n  </tr>\n  <tr>\n    <td>A1</td>\n    <td>3</td>\n    <td>Common Cathode</td>\n  </tr>\n  <tr>\n    <td>A2</td>\n    <td>13</td>\n    <td>Common Cathode</td>\n  </tr>\n  <tr>\n    <td>A3</td>\n    <td>16</td>\n    <td>Common Cathode</td>\n  </tr>\n  <tr>\n    <td>A4</td>\n    <td>19</td>\n    <td>Common Cathode</td>\n  </tr>\n  <tr>\n    <td>A5</td>\n    <td>22</td>\n    <td>Common Cathode</td>\n  </tr>\n</tbody></table><!--kg-card-end: html--><h2 id=\"step-3-making-it-do-stuff\">Step 3: Making It Do Stuff</h2><p>One hard truth I was hit with pretty early on is that making a legible picture show up on this thing wasn't going to be as simple as I had hoped.</p><p>There are 16 pins wired up, each with two possible states: On or Off. This equates to 2<sup>16</sup> possible voltage states that the pins can be in. However, there are 64 LEDs wired up (disregarding the green LEDs), which equates to 2<sup>64</sup> possible LED states. This means that it's impossible to make any pattern of LEDs light up at a given time (it's a violation of the <a href=\"https://en.wikipedia.org/wiki/Pigeonhole_principle\">Pigeonhole Principle</a>).</p><p>My plan instead, then, was to only ever display one pixel at a time. That might sound like a pretty silly way to make an image scroller, but this actually isn't too dissimilar to the way old-fashioned CRT monitors work.</p><p>By turning single LEDs on for fractions of a second and repeating, we can trick the human eye into perceiving a still image. By feeding multiple images into this process, we can make it look like an image is moving.</p><p>The other advantage of this approach is that current will only be drawn for 0 or 1 LED at any given instance. This means that standard resistors can be used. If we were lighting up multiple pixels in a given column at the same time, a more sophisticated method would have to be used (and with my current skillset, I don't know what that would be).</p><h2 id=\"step-4-the-code\">Step 4: The Code</h2><p>I've included comments in the code below to act as an explanation:</p><!--kg-card-begin: code--><pre><code class=\"language-language-cpp\">// The number of LEDs in the matrix in one dimension.\n#define LED_MATRIX_SIZE 8\n\n// The width of each letter when displayed on the matrix, including one column for\n// spacing between letters.\n#define LETTER_WIDTH 6\n#define REPAINT_COUNT 50\n\n// Red pins, in left-to-right order.\n// Physical pin attachments to LED matrix: 11, 8, 5, 2, 14, 17, 20, 23.\nconst byte RED_PINS[LED_MATRIX_SIZE] = {2, 3, 4, 5, 6, 7, 8, 9};\n\n// Ground pins, in top-to-bottom order (skip pin 13 to avoid using the integrated LED).\n// Physical pin attachments to LED matrix: 22, 19, 16, 13, 3, 6, 9, 12.\nconst byte GROUND_PINS[LED_MATRIX_SIZE] = {A5, A4, A3, A2, A1, A0, 12, 11};\n\n/* Binary representation of each letter, where 1 indicates an \"On\" pixel and 0 indicates\n * \"Off\", e.g. the letter \"A\" is defined as 0b0111010001111111000110001. Split into 5\n * rows and columns, that binary value looks like:\n * 0 1 1 1 0\n * 1 0 0 0 1\n * 1 1 1 1 1\n * 1 0 0 0 1\n * 1 0 0 0 1\n * \n * Notice that the \"1\" pixels form a pixel representation of the letter \"A\". The same holds\n * true for the other letters defined below.\n */\nconst long LETTERS[] = {\n  0b0111010001111111000110001, // 'A'\n  0b1111010001111101000111110, // 'B'\n  0b0111010001100001000101110, // 'C'\n  0b1111010001100011000111110, // 'D'\n  0b1111110000111101000011111, // 'E'\n  0b1111110000111101000010000, // 'F'\n  0b0111010000101111001001110, // 'G'\n  0b1000110001111111000110001, // 'H'\n  0b1111100100001000010011111, // 'I'\n  0b0011100010000101001001100, // 'J'\n  0b1000110010111001001010001, // 'K'\n  0b1000010000100001000011111, // 'L'\n  0b0101010101101011000110001, // 'M'\n  0b1000111001101011001110001, // 'N'\n  0b0111010001100011000101110, // 'O'\n  0b1111010001111101000010000, // 'P'\n  0b0110010010101101001001101, // 'Q'\n  0b1111010001111101001010001, // 'R'\n  0b0111110000011100000111110, // 'S'\n  0b1111100100001000010000100, // 'T'\n  0b1000110001100011000101110, // 'U'\n  0b1000110001100010101000100, // 'V'\n  0b1000110001101011101110001, // 'W'\n  0b1000101010001000101010001, // 'X'\n  0b1000101010001000010000100, // 'Y'\n  0b1111100010001000100011111  // 'Z'\n};\n\n// Set all pins to output, so we can change the potential difference between\n// positive and negative pins. We also default the cathode pins to HIGH, which creates\n// a negative potential difference that results in no LEDs turning on.\nvoid setup() {\n  for (byte i = 0; i &lt; LED_MATRIX_SIZE; ++i) {\n    byte anodePin = RED_PINS[i];\n    pinMode(anodePin, OUTPUT);\n    \n    byte groundPin = GROUND_PINS[i];\n    pinMode(groundPin, OUTPUT);\n\n    digitalWrite(GROUND_PINS[i], HIGH);\n  }\n}\n\nvoid loop() {\n  renderMessage();\n}\n\nvoid renderMessage() {\n  // The message to display on the screen, with some space for padding\n  // when displaying the message.\n  char message[] = \" I AM ALIVE \";\n\n  int messageIndex = 0;\n  char messageChar = message[messageIndex];\n\n  while (messageChar != '\\0') {\n    char nextChar = message[messageIndex + 1];\n    if (nextChar == '\\0') {\n      nextChar = ' ';\n    }\n\n    renderFrame(messageChar, nextChar);\n\n    ++messageIndex;\n    messageChar = message[messageIndex]; \n  }\n}\n\n// 2 characters are always present on the screen. This function handles the drawing of those two\n// characters in such a way that they scroll off the screen to the left. As soon as the first\n// character is invisible, the function exits and is called again with a new secondChar,\n// while the previous secondChar is passed in as the new firstChar.\nvoid renderFrame(char firstChar, char secondChar) {\n  for (byte i = 0; i &lt; LETTER_WIDTH; ++i) {\n    for (byte j = 0; j &lt; REPAINT_COUNT; ++j) {\n      boolean frame[LED_MATRIX_SIZE][LED_MATRIX_SIZE] = {};\n      \n      renderCharacter(frame, firstChar, -i);\n      renderCharacter(frame, secondChar, 6 - i);\n\n      renderFrame(frame);\n      delay(1);\n    }\n  }\n}\n\n// Draws a pixel representation of a single letter to the frame buffer.\nvoid renderCharacter(boolean frame[LED_MATRIX_SIZE][LED_MATRIX_SIZE], char character, int offset) {\n  for (int row = 0; row &lt; 5; ++row) {\n    for (int col = 0; col &lt; 5; ++col) {\n      int bitCount = (row * 5) + col;\n\n      long displayCharacter;\n      if (character == ' ') {\n        displayCharacter = 0; // All spaces.\n      } else {\n        displayCharacter = LETTERS[character - 'A'];\n      }\n\n      // This is where the magic happens. The left shift and binary AND operations are used\n      // together to effectively iterate over each bit of the character as defined in the\n      // LETTERS array. This results in a 1 or 0, which is used to dictate whether a pixel\n      // should be turned on or off for a given point.\n      boolean isOn = displayCharacter &amp; (1L &lt;&lt; (24 - bitCount));\n\n      // Only render the visible parts of the letter (part of the letter is likely to have\n      // scrolled off the screen.\n      int offsetCol = col + offset;\n      if (offsetCol &gt;= 0 &amp;&amp; offsetCol &lt; LED_MATRIX_SIZE) {\n        frame[row][offsetCol] = isOn;\n      }\n    }\n  }\n}\n\n// Converts the in-memory frame buffer into an actual image. This is achieved by rapidly\n// turning on single LEDs that correspond to \"true\" values in the frame buffer, then turning\n// them off after a short delay.\n// A single pixel is turned on by bringing the anode pin HIGH and the corresponding cathode pin\n// LOW. Remember that all cathodes were brought HIGH earlier in the setup() function.\nvoid renderFrame(boolean frame[LED_MATRIX_SIZE][LED_MATRIX_SIZE]) {\n  for (byte row = 0; row &lt; LED_MATRIX_SIZE; ++row) {\n    for (byte col = 0; col &lt; LED_MATRIX_SIZE; ++col) {\n        // Turn pixel on or off as required.\n        digitalWrite(RED_PINS[row], frame[row][col]);\n        digitalWrite(GROUND_PINS[col], !frame[row][col]);\n\n        // Turn pixel back off.\n        digitalWrite(RED_PINS[row], LOW);\n        digitalWrite(GROUND_PINS[col], HIGH);\n    }\n  }\n}\n</code></pre><!--kg-card-end: code--><h2 id=\"that-s-all-there-is-to-it\">That's All There Is To It</h2><p>If you've made it to the end of this article, thanks for your patience. This is my first blog post of substance, and I'd love to hear any feedback or constructive criticism in the comments section below. Cheers!</p>","url":"http://localhost:2368/working-with-an-8x8-led-matrix/","uuid":"a4bf4ed8-e393-43cb-b26d-ad2429f77e10","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d5cecc95655c53c345c7e9c"}},{"node":{"id":"Ghost__Post__5d5ce55d5655c53c345c7e83","title":"A Blog Is Born","slug":"a-blog-is-born","featured":false,"feature_image":"http://localhost:2368/content/images/2019/08/Profile-Photo-1.jpg","excerpt":"Hi there, nice to meet you. This is my first ever blog post.","custom_excerpt":"Hi there, nice to meet you. This is my first ever blog post.","created_at_pretty":"21 August, 2019","published_at_pretty":"29 September, 2015","updated_at_pretty":"21 August, 2019","created_at":"2019-08-21T16:31:57.000+10:00","published_at":"2015-09-29T12:29:00.000+10:00","updated_at":"2019-08-21T21:35:59.000+10:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null}],"primary_author":{"name":"Chris Parton","slug":"chris","bio":null,"profile_image":"//www.gravatar.com/avatar/6b7434bbe636033b9d4be00df745f7f1?s=250&d=mm&r=x","twitter":"@chrislights_","facebook":null,"website":null},"primary_tag":{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"electronics","slug":"electronics","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"software","slug":"software","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Hi there, nice to meet you.\n\nThis is my first ever blog post. I've been meaning to do this for quite some\ntime, but I've struggled with motivation and ideas for content.\n\nI'm a software engineer by trade, but recently I've been getting into\nelectronics. I picked up the Sparkfun Inventor's Kit\n[https://www.sparkfun.com/products/12060] and now I'm hooked. I'm kind of\nexploiting my newfound motivation for Making to kickstart my blog.\n\nMy plans for the blog aren't set in stone yet, but content will include:\n\n * Electronics projects, which will hopefully increase in complexity and\n   interestingness (that's a real word, I googled it) as I learn more.\n * Programming tidbits and grievances.\n * Reviews of software and tools that I use for the above.\n\nAnyway, this is it for now. I already have something to write about for my first\nelectronics blog post, so exciting times ahead!\n\nCheers,\nChris","html":"<p>Hi there, nice to meet you.</p><p>This is my first ever blog post. I've been meaning to do this for quite some time, but I've struggled with motivation and ideas for content.</p><p>I'm a software engineer by trade, but recently I've been getting into electronics. I picked up the <a href=\"https://www.sparkfun.com/products/12060\">Sparkfun Inventor's Kit</a> and now I'm hooked. I'm kind of exploiting my newfound motivation for Making to kickstart my blog.</p><p>My plans for the blog aren't set in stone yet, but content will include:</p><ul><li>Electronics projects, which will hopefully increase in complexity and interestingness (that's a real word, I googled it) as I learn more.</li><li>Programming tidbits and grievances.</li><li>Reviews of software and tools that I use for the above.</li></ul><p>Anyway, this is it for now. I already have something to write about for my first electronics blog post, so exciting times ahead!</p><p>Cheers,<br>Chris</p>","url":"http://localhost:2368/a-blog-is-born/","uuid":"98ca1279-2447-43bb-ac0d-be07bef9bd9e","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d5ce55d5655c53c345c7e83"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"electronics","limit":12,"skip":0,"numberOfPages":1,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":null,"previousPagePath":null,"nextPagePath":null}}}