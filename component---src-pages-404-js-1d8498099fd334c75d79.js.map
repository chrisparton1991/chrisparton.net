{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_common__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","className","style","textAlign","to","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","m","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","DefaultLayout","bodyClass","isHome","site","allGhostSettings","edges","node","profileImageUrl","allGhostPost","primary_author","profile_image","twitterUrl","twitter","replace","facebookUrl","facebook","react_default","Helmet_default","lang","type","codeinjection_styles","cover_image","backgroundImage","src","title","description","common_Navigation","navigation","navClass","href","target","rel","alt","config","gatsby_browser_entry","DefaultLayoutSettingsQuery","Layout_DefaultLayout","_1281977687","PostCard","post","url","slug","readingTime","readingTimeHelper","feature_image","tags","lib","visibility","autolink","featured","excerpt","name","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","map","navItem","i","match","key","label","defaultProps","Layout","common_PostCard","common_Pagination"],"mappings":"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","file":"component---src-pages-404-js-1d8498099fd334c75d79.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Layout } from '../components/common'\r\n\r\nconst NotFoundPage = () => (\r\n    <Layout>\r\n        <div className=\"container\">\r\n            <article className=\"content\" style={{ textAlign: `center` }}>\r\n                <h1 className=\"content-title\">Error 404</h1>\r\n                <section className=\"content-body\">\r\n                    Page not found, <Link to=\"/\">return home</Link> to start over\r\n                </section>\r\n            </article>\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","module.exports = {\n    siteUrl: `https://chrisparton.net`, // Site domain. Do not include a trailing slash!\n\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\n\n    siteTitleMeta: `ChrisParton.net`, // This allows an alternative site title for meta data for pages.\n    siteDescriptionMeta: `The elation and frustration of building software and electronics`, // This allows an alternative site description for meta data for pages.\n\n    shareImageWidth: 1000, // Change to the width of your default share image\n    shareImageHeight: 523, // Change to the height of your default share image\n\n    shortTitle: `ChrisParton`, // Used for App manifest e.g. Mobile Home Screen\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\n    themeColor: `#15171a`, // Used for Offline Manifest\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { Navigation } from '.'\nimport config from '../../utils/siteConfig'\n\n// Styles\nimport '../../styles/app.css'\nimport '../../styles/blog.css'\n\n/**\n* Main layout component\n*\n* The Layout component wraps around each page and template.\n* It also provides the header, footer as well as the main\n* styles, and meta data for each page.\n*\n*/\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\n    const site = data.allGhostSettings.edges[0].node\n    const profileImageUrl = data.allGhostPost.edges[0].node.primary_author.profile_image\n    const twitterUrl = site.twitter ? `https://twitter.com/${site.twitter.replace(/^@/, ``)}` : null\n    const facebookUrl = site.facebook ? `https://www.facebook.com/${site.facebook.replace(/^\\//, ``)}` : null\n\n    return (\n    <>\n        <Helmet>\n            <html lang={site.lang} />\n            <style type=\"text/css\">{`${site.codeinjection_styles}`}</style>\n            <body className={bodyClass} />\n        </Helmet>\n\n        <div className=\"viewport\">\n\n            <div className=\"viewport-top\">\n                {/* The main header section on top of the screen */}\n                <header className=\"site-head\" style={{ ...site.cover_image && { backgroundImage: `url(${site.cover_image})` } }}>\n                    <div className=\"container\">\n                        <div className=\"site-mast\">\n                        </div>\n                        { isHome ?\n                            <div className=\"site-banner\">\n                                <img className=\"banner-profile-image\" src={profileImageUrl}/>\n                                <h1 className=\"site-banner-title\">{site.title}</h1>\n                                <p className=\"site-banner-desc\">{site.description}</p>\n                            </div> :\n                            null}\n                        <nav className=\"site-nav\">\n                            <div className=\"site-nav-left\">\n                                {/* The navigation items as setup in Ghost */}\n                                <Navigation data={site.navigation} navClass=\"site-nav-item\" />\n                            </div>\n                            <div className=\"site-nav-right\">\n                                { site.twitter && <a href={ twitterUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" /></a>}\n                                { site.facebook && <a href={ facebookUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" /></a>}\n                                <a className=\"site-nav-item\" href={ `https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/` } target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" /></a>\n                            </div>\n                        </nav>\n                    </div>\n                </header>\n\n                <main className=\"site-main\">\n                    {/* All the main content gets inserted here, index.js, post.js */}\n                    {children}\n                </main>\n\n            </div>\n\n            <div className=\"viewport-bottom\">\n                {/* The footer at the very bottom of the screen */}\n                <footer className=\"site-foot\">\n                    <div className=\"site-foot-nav container\">\n                        <div className=\"site-foot-nav-left\">\n                            <Link to=\"/\">{site.title}</Link> © 2019\n                        </div>\n                        <div className=\"site-foot-nav-right\">\n                            <Navigation data={site.navigation} navClass=\"site-foot-nav-item\" />\n                        </div>\n                    </div>\n                </footer>\n\n            </div>\n        </div>\n\n    </>\n    )\n}\n\nDefaultLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    bodyClass: PropTypes.string,\n    isHome: PropTypes.bool,\n    data: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n}\n\nconst DefaultLayoutSettingsQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettings {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n                allGhostPost(limit: 1) {\n                    edges {\n                        node {\n                            primary_author {\n                                profile_image\n                            }\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <DefaultLayout data={data} {...props} />}\n    />\n)\n\nexport default DefaultLayoutSettingsQuery\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport { Tags } from '@tryghost/helpers-gatsby'\r\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\r\n\r\nconst PostCard = ({ post }) => {\r\n    const url = `/${post.slug}/`\r\n    const readingTime = readingTimeHelper(post)\r\n\r\n    return (\r\n        <Link to={url} className=\"post-card\">\r\n            <header className=\"post-card-header\">\r\n                {post.feature_image &&\r\n                    <div className=\"post-card-image\" style={{\r\n                        backgroundImage: `url(${post.feature_image})` ,\r\n                    }}></div>}\r\n                {post.tags && <div className=\"post-card-tags\"> <Tags post={post} visibility=\"public\" autolink={false} /></div>}\r\n                {post.featured && <span>Featured</span>}\r\n                <h2 className=\"post-card-title\">{post.title}</h2>\r\n            </header>\r\n            <section className=\"post-card-excerpt\">{post.excerpt}</section>\r\n            <footer className=\"post-card-footer\">\r\n                <div className=\"post-card-footer-left\">\r\n                    <div className=\"post-card-avatar\">\r\n                        {post.primary_author.profile_image ?\r\n                            <img className=\"author-profile-image\" src={post.primary_author.profile_image} alt={post.primary_author.name}/> :\r\n                            <img className=\"default-avatar\" src=\"/images/icons/avatar.svg\" alt={post.primary_author.name}/>\r\n                        }\r\n                    </div>\r\n                    <span>{ post.primary_author.name }</span>\r\n                </div>\r\n                <div className=\"post-card-footer-right\">\r\n                    <div>{readingTime}</div>\r\n                </div>\r\n            </footer>\r\n        </Link>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        feature_image: PropTypes.string,\r\n        featured: PropTypes.bool,\r\n        tags: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                name: PropTypes.string,\r\n            })\r\n        ),\r\n        excerpt: PropTypes.string.isRequired,\r\n        primary_author: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            profile_image: PropTypes.string,\r\n        }).isRequired,\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Pagination = ({ pageContext }) => {\r\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\r\n\r\n    return (\r\n        <nav className=\"pagination\" role=\"navigation\">\r\n            <div>\r\n                {previousPagePath && (\r\n\r\n                    <Link to={previousPagePath} rel=\"prev\">\r\n                            Previous\r\n                    </Link>\r\n\r\n                )}\r\n            </div>\r\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\r\n            <div>\r\n                {nextPagePath && (\r\n\r\n                    <Link to={nextPagePath} rel=\"next\">\r\n                            Next\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    pageContext: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\n/**\r\n* Navigation component\r\n*\r\n* The Navigation component takes an array of your Ghost\r\n* navigation property that is fetched from the settings.\r\n* It differentiates between absolute (external) and relative link (internal).\r\n* You can pass it a custom class for your own styles, but it will always fallback\r\n* to a `site-nav-item` class.\r\n*\r\n*/\r\nconst Navigation = ({ data, navClass }) => (\r\n    <>\r\n        {data.map((navItem, i) => {\r\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\r\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\r\n            } else {\r\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\r\n            }\r\n        })}\r\n    </>\r\n)\r\n\r\nNavigation.defaultProps = {\r\n    navClass: `site-nav-item`,\r\n}\r\n\r\nNavigation.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string.isRequired,\r\n            url: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ).isRequired,\r\n    navClass: PropTypes.string,\r\n}\r\n\r\nexport default Navigation\r\n","export { default as Layout } from './Layout'\r\nexport { default as PostCard } from './PostCard'\r\nexport { default as Pagination } from './Pagination'\r\nexport { default as Navigation } from './Navigation'\r\n"],"sourceRoot":""}