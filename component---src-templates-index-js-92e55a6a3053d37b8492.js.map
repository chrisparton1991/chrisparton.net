{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_common__WEBPACK_IMPORTED_MODULE_1__","_components_common_meta__WEBPACK_IMPORTED_MODULE_2__","Index","_ref","data","location","pageContext","posts","allGhostPost","edges","useEffect","document","body","classList","add","remove","a","createElement","Fragment","isHome","className","map","_ref2","node","key","id","post"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAmDeU,UApCD,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,YACvBC,EAAQH,EAAKI,aAAaC,MAOhC,OALAC,oBAAU,WAEN,OADAC,SAASC,KAAKC,UAAUC,IAAI,cACrB,kBAAMH,SAASC,KAAKC,UAAUE,OAAO,gBAC7C,IAGCjB,EAAAkB,EAAAC,cAAAnB,EAAAkB,EAAAE,SAAA,KACIpB,EAAAkB,EAAAC,cAAChB,EAAA,EAAD,CAAUI,SAAUA,IACpBP,EAAAkB,EAAAC,cAACjB,EAAA,EAAD,CAAQmB,QAAQ,GACZrB,EAAAkB,EAAAC,cAAA,OAAKG,UAAU,aACXtB,EAAAkB,EAAAC,cAAA,WAASG,UAAU,aACdb,EAAMc,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAEPzB,EAAAkB,EAAAC,cAACjB,EAAA,EAAD,CAAUwB,IAAKD,EAAKE,GAAIC,KAAMH,OAGtCzB,EAAAkB,EAAAC,cAACjB,EAAA,EAAD,CAAYM,YAAaA,QAqBtC,IAAMV,EAAS","file":"component---src-templates-index-js-92e55a6a3053d37b8492.js","sourcesContent":["import React, {useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Layout, PostCard, Pagination } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Main index page (home page)\n*\n* Loads all posts from Ghost and uses pagination to navigate through them.\n* The number of posts that should appear per page can be setup\n* in /utils/siteConfig.js under `postsPerPage`.\n*\n*/\nconst Index = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges\n\n    useEffect(() => {\n        document.body.classList.add('page-index');\n        return () => document.body.classList.remove('page-index');\n    }, []);\n\n    return (\n        <>\n            <MetaData location={location} />\n            <Layout isHome={true}>\n                <div className=\"container\">\n                    <section className=\"post-feed\">\n                        {posts.map(({ node }) => (\n                            // The tag below includes the markup for each post - components/common/PostCard.js\n                            <PostCard key={node.id} post={node} />\n                        ))}\n                    </section>\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nIndex.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n}\n\nexport default Index\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n  query GhostPostQuery($limit: Int!, $skip: Int!) {\n    allGhostPost(\n        sort: { order: DESC, fields: [published_at] },\n        limit: $limit,\n        skip: $skip\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}